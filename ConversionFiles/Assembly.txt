0x08000000 : Sub immediate value to a register value : Rd6, #124
0x08000000 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x08000001 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000002 : Store Register (immediate) : Rt0, Rn0, #3
0x08000003 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000003 : Load Register (register) : Rt0, Rn6, Rm2
0x08000003 : Load Register SP relative (immediate) : #58, Rt5
0x08000004 : Store Register Byte (immediate) : Rt3, Rn5, #23
0x08000004 : Sub immediate value to a register value : Rd1, #115
0x08000004 : Branch : #1998
0x08000004 : Move immediate value to a register : Rd3, #71
0x08000005 : Load Register Halfword (immediate) : Rt4, Rn3, #24
0x08000005 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x08000005 : Subtract a register value : Rd6, Rn6, Rm4
0x08000006 : Load Register (immediate) : Rt1, Rn3, #19
0x08000006 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000006 : Move copies a value from a register to the destination register : Rd5, Rm1
0x08000006 : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x08000007 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000007 : Load Register Signed Halfword (register) : Rt5, Rn7, Rm2
0x08000007 : Load Register Byte (immediate) : Rt4, Rn6, #11
0x08000008 : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x08000008 : Arithmetic Shift Right (immediate) : Rd7, Rm5, #28
0x08000008 : Logical Shift Left (register)  : Rm0, Rd0
0x08000008 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000009 : Branch with Link : #232, #232
0x08000009 : Load Register SP relative (immediate) : #62, Rt7
0x08000009 : Load Register Byte (immediate) : Rt2, Rn7, #23
0x08000009 : Logical Shift Right (immediate) : Rd3, Rm2, #4
0x0800000a : Move immediate value to a register : Rd7, #79
0x0800000a : Logical Shift Left (register)  : Rm0, Rd1
0x0800000a : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x0800000a : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x0800000b : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x0800000b : Load Register (immediate) : Rt0, Rn2, #3
0x0800000b : Address to Register adds an immediate value to the PC value : #66, Rd1
0x0800000b : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x0800000c : Subtract a register value : Rd4, Rn6, Rm0
0x0800000c : Store Register Byte (immediate) : Rt0, Rn4, #3
0x0800000c : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn1
0x0800000c : Branch : #1998
0x0800000d : Load Register SP relative (immediate) : #56, Rt4
0x0800000d : Load Register Byte (immediate) : Rt3, Rn6, #7
0x0800000d : Add immediate value to a register value : Rd3, Rn7, Rm4
0x0800000e : Store Register Byte (immediate) : Rt7, Rn5, #31
0x0800000e : Store Register (immediate) : Rt3, Rn0, #7
0x0800000e : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x0800000e : Branch with Link : #748, #748
0x0800000f : Sub immediate value to a register value : Rd7, #126
0x0800000f : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x08000010 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000010 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000010 : Load Register (immediate) : Rt0, Rn2, #3
0x08000011 : Address to Register adds an immediate value to the PC value : #64, Rd0
0x08000011 : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x08000011 : Subtract a register value : Rd4, Rn6, Rm0
0x08000011 : Logical Shift Left (register)  : Rm0, Rd0
0x08000012 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x08000012 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x08000012 : Add immediate value to a register value : Rd2, Rn7, Rm4
0x08000013 : Store Register Byte (immediate) : Rt2, Rn5, #23
0x08000013 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x08000013 : Logical Shift Left (immediate) : Rd6, Rm1, #28
0x08000013 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000014 : Move immediate value to a register : Rd0, #64
0x08000014 : Add a register value : Rd1, Rn6, Rm0
0x08000014 : Store Register (immediate) : Rt4, Rn0, #11
0x08000014 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x08000015 : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x08000015 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x08000015 : Logical Shift Left (register)  : Rm0, Rd0
0x08000015 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn5
0x08000016 : Arithmetic Shift Right (immediate) : Rd0, Rm5, #16
0x08000016 : Load Register SP relative (immediate) : #63, Rt7
0x08000016 : Load Register Byte (immediate) : Rt6, Rn7, #31
0x08000017 : Add a register value : Rd3, Rn6, Rm4
0x08000017 : Store Register (immediate) : Rt7, Rn1, #31
0x08000017 : Store Register calculates and address from a base register, stores a word : Rt3, Rn4, Rm6
0x08000017 : Move copies a value from a register to the destination register : Rd4, Rm1
0x08000018 : Branch with Link : #490, #490
0x08000018 : Sub immediate value to a register value : Rd7, #127
0x08000019 : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x08000019 : Store Register (immediate) : Rt4, Rn1, #27
0x08000019 : Load Register SP relative (immediate) : #49, Rt0
0x08000019 : Move immediate value to a register : Rd6, #76
0x0800001a : Load Register SP relative (immediate) : #51, Rt1
0x0800001a : Move immediate value to a register : Rd2, #68
0x0800001a : Load Register Halfword (immediate) : Rt3, Rn2, #4
0x0800001a : Store Register (immediate) : Rt4, Rn0, #11
0x0800001b : Load Register Halfword (immediate) : Rt1, Rn2, #0
0x0800001b : Branch with Link : #748, #748
0x0800001b : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x0800001c : Sub immediate value to a register value : Rd7, #127
0x0800001c : Branch : #193
0x0800001c : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800001c : Compare immediate value from a register value : Rn6, #92
0x0800001d : Branch : #709
0x0800001d : Load Register Halfword (immediate) : Rt7, Rn2, #12
0x0800001e : Load Register Byte (immediate) : Rt5, Rn7, #27
0x0800001f : Load Register Byte (immediate) : Rt6, Rn7, #31
0x0800001f : Load Register SP relative (immediate) : #63, Rt7
0x0800001f : Store Register Byte (immediate) : Rt4, Rn5, #27
0x08000020 : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x08000020 : Add immediate value to a register value : Rd3, Rn7, Rm4
0x08000020 : ADD (SP plus immediate) adds an immediate value to the SP value : #80, Rd0
0x08000021 : Address to Register adds an immediate value to the PC value : #67, Rd1
0x08000021 : Subtract a register value : Rd5, Rn6, Rm0
0x08000021 : Load Register (immediate) : Rt4, Rn2, #11
0x08000021 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x08000022 : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x08000022 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000022 : ADD (SP plus immediate) adds an immediate value to the SP value : #80, Rd0
0x08000023 : Address to Register adds an immediate value to the PC value : #64, Rd0
0x08000023 : Compare immediate value from a register value : Rn2, #85
0x08000023 : ADD (SP plus immediate) adds an immediate value to the SP value : #84, Rd2
0x08000023 : Add immediate value to a register value : Rd2, #101
0x08000024 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn2
0x08000024 : Branch : #966
0x08000024 : Load Register Halfword (immediate) : Rt1, Rn3, #16
0x08000024 : Sub immediate value to a register value : Rd6, #124
0x08000025 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x08000025 : Logical Shift Left (register)  : Rm0, Rd0
0x08000025 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000026 : Branch with Link : #232, #232
0x08000026 : SUB immediate value to a register value : Rd6, Rn7, Rm4
0x08000026 : Load Register Byte (immediate) : Rt2, Rn7, #23
0x08000026 : Subtract with carry (register)  : Rm0, Rd3
0x08000027 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x08000027 : Branch : #1224
0x08000027 : Store Register SP relative (immediate) : #32, Rt0
0x08000027 : Load Register Halfword (immediate) : Rt4, Rn3, #24
0x08000028 : Sub immediate value to a register value : Rd1, #114
0x08000028 : Load Register Halfword (immediate) : Rt1, Rn2, #0
0x08000028 : Move immediate value to a register : Rd3, #71
0x08000028 : Sub immediate value to a register value : Rd0, #113
0x08000029 : Branch : #708
0x08000029 : Bit clear performs a bitwise AND of a register value and the complement of a register value : Rm0, Rd7
0x08000029 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800002a : Store Register calculates and address from a base register, stores a word : Rt1, Rn4, Rm2
0x0800002a : Load Register SP relative (immediate) : #63, Rt7
0x0800002a : Load Register Byte (immediate) : Rt6, Rn7, #31
0x0800002b : Load Register (immediate) : Rt3, Rn2, #7
0x0800002b : Address to Register adds an immediate value to the PC value : #79, Rd7
0x0800002b : Branch : #1741
0x0800002b : Load Register SP relative (immediate) : #52, Rt2
0x0800002c : Sub immediate value to a register value : Rd6, #124
0x0800002c : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x0800002c : Logical Shift Left (register)  : Rm0, Rd0
0x0800002d : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x0800002d : Branch with Link : #232, #232
0x0800002e : Compare immediate value from a register value : Rn7, #95
0x0800002e : Move immediate value to a register : Rd4, #73
0x0800002e : Store Register SP relative (immediate) : #37, Rt2
0x0800002e : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x0800002f : Logical Shift Right (immediate) : Rd2, Rm2, #4
0x0800002f : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x0800002f : Logical Shift Left (register)  : Rm0, Rd0
0x08000030 : Move immediate value to a register : Rd4, #72
0x08000030 : Store Register SP relative (immediate) : #32, Rt0
0x08000030 : Branch : #708
0x08000031 : Load Register Halfword (immediate) : Rt2, Rn2, #4
0x08000031 : Load Register Signed Halfword (register) : Rt4, Rn7, Rm2
0x08000031 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000031 : Store Register Halfword (immediate) : Rt3, Rn1, #20
0x08000032 : Arithmetic Shift Right (immediate) : Rd7, Rm5, #28
0x08000032 : Load Register SP relative (immediate) : #48, Rt0
0x08000032 : Store Register (immediate) : Rt2, Rn0, #7
0x08000033 : Load Register Signed Halfword (register) : Rt7, Rn7, Rm6
0x08000033 : Load Register Byte (immediate) : Rt4, Rn7, #27
0x08000033 : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x08000033 : Arithmetic Shift Right (immediate) : Rd7, Rm5, #28
0x08000034 : Logical Shift Left (register)  : Rm0, Rd0
0x08000034 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000034 : Branch with Link : #232, #232
0x08000034 : Load Register SP relative (immediate) : #62, Rt7
0x08000035 : Load Register Byte (immediate) : Rt2, Rn7, #23
0x08000035 : Add a register value : Rd3, Rn6, Rm4
0x08000035 : Store Register (immediate) : Rt7, Rn1, #31
0x08000035 : Branch : #451
0x08000036 : Store Register Halfword (immediate) : Rt4, Rn1, #24
0x08000036 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn6
0x08000036 : Sub immediate value to a register value : Rd0, #112
0x08000037 : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x08000037 : Sub immediate value to a register value : Rd7, #126
0x08000037 : Compare immediate value from a register value : Rn0, #81
0x08000037 : Address to Register adds an immediate value to the PC value : #71, Rd3
0x08000038 : Compare substracts a register value from a register value : Rm0, Rn5
0x08000038 : Logical Shift Right (immediate) : Rd4, Rm2, #8
0x08000038 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000038 : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x08000039 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000039 : Address to Register adds an immediate value to the PC value : #64, Rd0
0x08000039 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800003a : Load Register SP relative (immediate) : #52, Rt2
0x0800003a : Load Register (immediate) : Rt0, Rn2, #3
0x0800003a : Logical Shift Right (immediate) : Rd5, Rm3, #24
0x0800003b : Sub immediate value to a register value : Rd2, #116
0x0800003b : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x0800003b : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x0800003b : Move immediate value to a register : Rd0, #64
0x0800003c : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800003c : loads a word from memory and writes it to a register : #144, Rt0
0x0800003d : Store Register Byte (immediate) : Rt1, Rn5, #19
0x0800003d : Load Register Halfword (immediate) : Rt3, Rn3, #20
0x0800003d : Add immediate value to a register value : Rd7, #110
0x0800003d : Add a register value : Rd1, Rn6, Rm0
0x0800003e : Store Register (immediate) : Rt6, Rn0, #15
0x0800003e : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x0800003e : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x0800003e : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800003f : Move immediate value to a register : Rd0, #64
0x0800003f : Load Register SP relative (immediate) : #49, Rt0
0x0800003f : Store Register (immediate) : Rt4, Rn0, #11
0x0800003f : Load Register Byte (immediate) : Rt3, Rn6, #7
0x08000040 : Branch : #1740
0x08000040 : Store Register Halfword (immediate) : Rt7, Rn1, #28
0x08000040 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000041 : Sub immediate value to a register value : Rd6, #125
0x08000041 : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x08000042 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x08000042 : Sub immediate value to a register value : Rd7, #127
0x08000042 : Logical Shift Left (register)  : Rm0, Rd1
0x08000043 : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x08000043 : Branch with Link : #232, #232
0x08000043 : Load Register SP relative (immediate) : #62, Rt7
0x08000043 : Load Register Byte (immediate) : Rt2, Rn7, #23
0x08000044 : Logical Shift Right (immediate) : Rd3, Rm2, #4
0x08000044 : Move immediate value to a register : Rd7, #79
0x08000044 : Store Register (immediate) : Rt1, Rn0, #3
0x08000044 : Store Register Halfword (immediate) : Rt4, Rn0, #8
0x08000045 : Branch : #1740
0x08000045 : Load Register SP relative (immediate) : #48, Rt0
0x08000045 : Sub immediate value to a register value : Rd6, #124
0x08000046 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x08000046 : Logical Shift Left (register)  : Rm0, Rd0
0x08000046 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000046 : Branch with Link : #232, #232
0x08000047 : Load Register Signed Halfword (register) : Rt6, Rn7, Rm6
0x08000047 : Load Register Byte (immediate) : Rt2, Rn7, #23
0x08000047 : Compare substract register value from register value : Rn1, Rm3
0x08000047 : Arithmetic Shift Right (immediate) : Rd7, Rm5, #28
0x08000048 : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x08000048 : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x08000048 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x08000048 : Move immediate value to a register : Rd1, #66
0x08000049 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x08000049 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x08000049 : Add immediate value to a register value : Rd0, Rn7, Rm0
0x08000049 : Store Register Byte (immediate) : Rt0, Rn4, #3
0x0800004a : Store Register (immediate) : Rt3, Rn0, #7
0x0800004a : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x0800004a : Load Register (register) : Rt0, Rn6, Rm2
0x0800004b : Load Register SP relative (immediate) : #58, Rt5
0x0800004b : Store Register Byte (immediate) : Rt3, Rn5, #23
0x0800004b : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn1
0x0800004b : Move immediate value to a register : Rd7, #78
0x0800004c : loads a word from memory and writes it to a register : #153, Rt4
0x0800004c : Add immediate value to a register value : Rd2, #100
0x0800004c : Logical Shift Left (immediate) : Rd1, Rm1, #16
0x0800004c : Arithmetic Shift Right (immediate) : Rd6, Rm4, #12
0x0800004d : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800004d : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x0800004d : Logical Shift Left (register)  : Rm0, Rd0
0x0800004e : Store Register (immediate) : Rt2, Rn0, #7
0x0800004e : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x0800004e : Load Register (register) : Rt0, Rn6, Rm2
0x0800004f : Load Register Byte (immediate) : Rt2, Rn7, #23
0x0800004f : Load Register SP relative (immediate) : #62, Rt7
0x0800004f : Arithmetic Shift Right (immediate) : Rd4, Rm5, #24
0x08000050 : Load Register (register) : Rt3, Rn6, Rm6
0x08000050 : Address to Register adds an immediate value to the PC value : #66, Rd1
0x08000050 : Store Register Halfword (immediate) : Rt3, Rn1, #20
0x08000050 : Sub immediate value to a register value : Rd2, #116
0x08000051 : loads a word from memory and writes it to a register : #157, Rt6
0x08000051 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn5
0x08000051 : Add immediate value to a register value : Rd4, #105
0x08000052 : Load Register Byte (register) : Rt1, Rn7, Rm2
0x08000052 : Store Register Byte (immediate) : Rt6, Rn4, #15
0x08000052 : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x08000052 : Arithmetic Shift Right (immediate) : Rd6, Rm5, #28
0x08000053 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000054 : Address to Register adds an immediate value to the PC value : #64, Rd0
0x08000054 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000054 : Load Register Byte (immediate) : Rt4, Rn6, #11
0x08000055 : Load Register SP relative (immediate) : #61, Rt6
0x08000055 : Load Register (immediate) : Rt4, Rn2, #11
0x08000055 : ADD (SP plus immediate) adds an immediate value to the SP value : #83, Rd1
0x08000055 : Address to Register adds an immediate value to the PC value : #77, Rd6
0x08000056 : Load Register SP relative (immediate) : #53, Rt2
0x08000056 : Load Register (immediate) : Rt3, Rn2, #7
0x08000056 : ADD (SP plus immediate) adds an immediate value to the SP value : #91, Rd5
0x08000057 : loads a word from memory and writes it to a register : #149, Rt2
0x08000057 : Compare immediate value from a register value : Rn3, #86
0x08000058 : Store Register Halfword : Rt5, Rn4, Rm2
0x08000058 : Load Register Halfword (immediate) : Rt2, Rn3, #20
0x08000058 : Add immediate value to a register value : Rd5, #106
0x08000058 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x08000059 : Move immediate value to a register : Rd3, #70
0x08000059 : Load Register Byte (register) : Rt1, Rn7, Rm2
0x08000059 : Store Register Byte (immediate) : Rt4, Rn4, #11
0x0800005a : Load Register Signed Byte (register) : Rt6, Rn5, Rm6
0x0800005a : Load Register Halfword (immediate) : Rt2, Rn3, #20
0x0800005a : Add immediate value to a register value : Rd5, #106
0x0800005a : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x0800005b : Move immediate value to a register : Rd3, #70
0x0800005b : Store Register SP relative (immediate) : #33, Rt0
0x0800005b : Compare substracts a register value from a register value : Rm0, Rn4
0x0800005b : Load Register (register) : Rt2, Rn6, Rm6
0x0800005c : Store Register (immediate) : Rt0, Rn1, #19
0x0800005c : Store Register Halfword (immediate) : Rt3, Rn1, #20
0x0800005c : Arithmetic Shift Right (immediate) : Rd4, Rm5, #24
0x0800005c : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800005d : Move immediate value to a register : Rd1, #66
0x0800005d : Load Register (register) : Rt1, Rn6, Rm2
0x0800005d : Store Register (immediate) : Rt4, Rn0, #11
0x0800005d : Store Register SP relative (immediate) : #43, Rt5
0x0800005e : Load Register Signed Byte (register) : Rt4, Rn5, Rm2
0x0800005e : Logical Shift Right (immediate) : Rd2, Rm2, #4
0x0800005e : Move immediate value to a register : Rd5, #74
0x0800005e : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x0800005f : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x0800005f : Add immediate value to a register value : Rd0, Rn7, Rm0
0x0800005f : Store Register Byte (immediate) : Rt0, Rn4, #3
0x0800005f : Store Register (immediate) : Rt3, Rn0, #7
0x08000060 : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x08000060 : Load Register (register) : Rt0, Rn6, Rm2
0x08000060 : Load Register SP relative (immediate) : #58, Rt5
0x08000061 : Store Register Byte (immediate) : Rt3, Rn5, #23
0x08000061 : loads a word from memory and writes it to a register : #147, Rt1
0x08000061 : Move immediate value to a register : Rd7, #78
0x08000062 : Compare immediate value from a register value : Rn3, #86
0x08000062 : ADD (SP plus immediate) adds an immediate value to the SP value : #90, Rd5
0x08000062 : Store Register Halfword : Rt5, Rn4, Rm2
0x08000063 : loads a word from memory and writes it to a register : #149, Rt2
0x08000063 : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x08000063 : Arithmetic Shift Right (immediate) : Rd1, Rm5, #16
0x08000063 : Store Register (immediate) : Rt0, Rn0, #3
0x08000064 : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x08000064 : Branch with Link : #748, #748
0x08000064 : SUB immediate value to a register value : Rd6, Rn7, Rm4
0x08000064 : Load Register Byte (immediate) : Rt3, Rn7, #23
0x08000065 : Subtract with carry (register)  : Rm0, Rd3
0x08000065 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x08000065 : Arithmetic Shift Right (immediate) : Rd0, Rm5, #16
0x08000065 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x08000066 : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x08000066 : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x08000066 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x08000066 : Move immediate value to a register : Rd0, #64
0x08000067 : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x08000067 : Compare substracts a register value from a register value : Rm0, Rn4
0x08000067 : Subtract with carry (register)  : Rm0, Rd2
0x08000067 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000068 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x08000068 : Add immediate value to a register value : Rd2, Rn7, Rm4
0x08000068 : Store Register Byte (immediate) : Rt2, Rn5, #23
0x08000069 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x08000069 : Logical Shift Left (immediate) : Rd6, Rm1, #28
0x08000069 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000069 : Move immediate value to a register : Rd0, #64
0x0800006a : Load Register Halfword (immediate) : Rt1, Rn2, #0
0x0800006a : Move immediate value to a register : Rd2, #68
0x0800006a : Load Register Halfword (immediate) : Rt1, Rn2, #0
0x0800006a : Move immediate value to a register : Rd2, #68
0x0800006b : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x0800006b : Move immediate value to a register : Rd2, #68
0x0800006b : Logical Shift Right (immediate) : Rd1, Rm3, #16
0x0800006b : Add immediate value to a register value : Rd2, #100
0x0800006c : Store Register Byte (immediate) : Rt1, Rn4, #3
0x0800006c : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn3
0x0800006c : Branch with Link and Exchange : Rm1
0x0800006c : Add immediate value to a register value : Rd0, Rn7, Rm0
0x0800006d : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800006d : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800006d : Move immediate value to a register : Rd0, #64
0x0800006d : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x0800006e : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x0800006e : Load Register Halfword (register) : Rt6, Rn6, Rm6
0x0800006e : Load Register (immediate) : Rt1, Rn3, #19
0x0800006f : Load Register Signed Byte (register) : Rt5, Rn5, Rm2
0x0800006f : ADD (SP plus immediate) adds an immediate value to the SP value : #90, Rd5
0x08000070 : Load Register Halfword (immediate) : Rt5, Rn2, #8
0x08000070 : Compare immediate value from a register value : Rn3, #86
0x08000070 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x08000070 : Move immediate value to a register : Rd2, #69
0x08000071 : loads a word from memory and writes it to a register : #153, Rt4
0x08000071 : Add immediate value to a register value : Rd2, #100
0x08000071 : Store Register Byte : Rt1, Rn5, Rm2
0x08000071 : Store Register Halfword : Rt6, Rn4, Rm6
0x08000072 : Address to Register adds an immediate value to the PC value : #74, Rd5
0x08000072 : Store Register SP relative (immediate) : #42, Rt5
0x08000072 : Load Register SP relative (immediate) : #52, Rt2
0x08000072 : Load Register (immediate) : Rt2, Rn2, #7
0x08000073 : Store Register (immediate) : Rt5, Rn1, #27
0x08000073 : ADD (SP plus immediate) adds an immediate value to the SP value : #91, Rd5
0x08000074 : Load Register (immediate) : Rt5, Rn2, #11
0x08000074 : ADD (SP plus immediate) adds an immediate value to the SP value : #86, Rd3
0x08000074 : Branch : #1741
0x08000074 : Load Register SP relative (immediate) : #53, Rt2
0x08000075 : Sub immediate value to a register value : Rd7, #127
0x08000075 : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x08000076 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000076 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000076 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x08000076 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x08000077 : Address to Register adds an immediate value to the PC value : #64, Rd0
0x08000077 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000077 : Load Register SP relative (immediate) : #52, Rt2
0x08000077 : Load Register (immediate) : Rt0, Rn2, #3
0x08000078 : Logical Shift Right (immediate) : Rd3, Rm2, #4
0x08000078 : Move immediate value to a register : Rd6, #77
0x08000078 : Store Register Halfword (immediate) : Rt1, Rn0, #0
0x08000078 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x08000079 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x08000079 : Move immediate value to a register : Rd0, #64
0x08000079 : Store Register (immediate) : Rt1, Rn0, #3
0x08000079 : Store Register Halfword (immediate) : Rt4, Rn0, #8
0x0800007a : Load Register (register) : Rt0, Rn6, Rm2
0x0800007a : Load Register SP relative (immediate) : #58, Rt5
0x0800007a : Store Register Byte (immediate) : Rt3, Rn5, #23
0x0800007b : Sub immediate value to a register value : Rd1, #115
0x0800007b : Branch : #1998
0x0800007b : Move immediate value to a register : Rd3, #71
0x0800007b : Load Register Halfword (immediate) : Rt4, Rn3, #24
0x0800007c : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x0800007c : Subtract a register value : Rd6, Rn6, Rm4
0x0800007c : Load Register (immediate) : Rt1, Rn3, #19
0x0800007d : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800007d : Move copies a value from a register to the destination register : Rd5, Rm1
0x0800007d : Address to Register adds an immediate value to the PC value : #66, Rd1
0x0800007d : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x0800007e : Load Register Halfword (immediate) : Rt4, Rn2, #8
0x0800007e : Compare immediate value from a register value : Rn0, #80
0x0800007e : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x0800007e : Move immediate value to a register : Rd2, #69
0x0800007f : loads a word from memory and writes it to a register : #153, Rt4
0x0800007f : Add immediate value to a register value : Rd2, #100
0x0800007f : Store Register SP relative (immediate) : #41, Rt4
0x0800007f : Store Register Halfword : Rt6, Rn4, Rm6
0x08000080 : Load Register Halfword (immediate) : Rt2, Rn2, #4
0x08000080 : Move immediate value to a register : Rd5, #74
0x08000080 : Load Register Halfword (immediate) : Rt1, Rn2, #0
0x08000080 : Move immediate value to a register : Rd2, #68
0x08000081 : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x08000081 : Move immediate value to a register : Rd2, #68
0x08000081 : Logical Shift Left (register)  : Rm0, Rd1
0x08000081 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x08000082 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x08000082 : Conditional branch : cond:7, #42, cond:7
0x08000083 : Compare immediate value from a register value : Rn7, #94
0x08000083 : loads a word from memory and writes it to a register : #145, Rt0
0x08000083 : Move immediate value to a register : Rd2, #69
0x08000083 : Store Register (immediate) : Rt1, Rn1, #19
0x08000084 : Store Register SP relative (immediate) : #36, Rt2
0x08000084 : Load Register Halfword (register) : Rt6, Rn6, Rm6
0x08000085 : Load Register (immediate) : Rt3, Rn3, #23
0x08000085 : Load Register Signed Byte (register) : Rt5, Rn5, Rm2
0x08000086 : Load Register Byte (immediate) : Rt6, Rn7, #31
0x08000086 : Add immediate value to a register value : Rd3, Rn7, Rm4
0x08000086 : Store Register Byte (immediate) : Rt7, Rn5, #31
0x08000087 : Store Register (immediate) : Rt3, Rn0, #7
0x08000087 : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x08000087 : Branch with Link : #748, #748
0x08000087 : SUB immediate value to a register value : Rd6, Rn7, Rm4
0x08000088 : Load Register Byte (immediate) : Rt3, Rn7, #23
0x08000088 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x08000088 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x08000088 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000089 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000089 : Move immediate value to a register : Rd0, #64
0x08000089 : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x0800008a : Move immediate value to a register : Rd2, #68
0x0800008a : Move immediate value to a register : Rd0, #65
0x0800008a : Store Register Halfword (immediate) : Rt4, Rn0, #8
0x0800008a : Store Register (immediate) : Rt4, Rn0, #11
0x0800008b : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800008b : Branch with Link : #748, #748
0x0800008b : Sub immediate value to a register value : Rd7, #126
0x0800008c : loads a word from memory and writes it to a register : #159, Rt7
0x0800008c : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800008c : Logical Shift Left (immediate) : Rd1, Rm1, #16
0x0800008c : Branch : #192
0x0800008d : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800008d : Sub immediate value to a register value : Rd6, #124
0x0800008d : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn7
0x0800008e : Load Register Byte (immediate) : Rt6, Rn7, #31
0x0800008e : Load Register SP relative (immediate) : #62, Rt7
0x0800008f : Load Register Byte (immediate) : Rt3, Rn7, #23
0x0800008f : Load Register (immediate) : Rt3, Rn2, #7
0x0800008f : Address to Register adds an immediate value to the PC value : #79, Rd7
0x0800008f : Load Register Signed Byte (register) : Rt5, Rn5, Rm2
0x08000090 : Load Register Halfword (register) : Rt4, Rn6, Rm2
0x08000090 : Add immediate value to a register value : Rd5, #106
0x08000090 : Store Register Halfword (immediate) : Rt6, Rn0, #12
0x08000091 : Logical Shift Right (immediate) : Rd2, Rm3, #20
0x08000091 : loads a word from memory and writes it to a register : #144, Rt0
0x08000091 : Move immediate value to a register : Rd0, #65
0x08000091 : Store Register Halfword (immediate) : Rt1, Rn1, #16
0x08000092 : Arithmetic Shift Right (immediate) : Rd4, Rm4, #8
0x08000092 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000092 : Move immediate value to a register : Rd1, #66
0x08000092 : Load Register Halfword (immediate) : Rt1, Rn2, #0
0x08000093 : Move immediate value to a register : Rd2, #68
0x08000093 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x08000093 : Move immediate value to a register : Rd2, #68
0x08000093 : Logical Shift Right (immediate) : Rd1, Rm3, #16
0x08000094 : Add immediate value to a register value : Rd2, #100
0x08000094 : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x08000094 : Bit clear performs a bitwise AND of a register value and the complement of a register value : Rm0, Rd6
0x08000094 : Subtract with carry (register)  : Rm0, Rd2
0x08000095 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000095 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000095 : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x08000095 : Branch : #192
0x08000096 : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x08000096 : Sub immediate value to a register value : Rd6, #124
0x08000096 : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x08000097 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000097 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000097 : Store Register calculates and address from a base register, stores a word : Rt3, Rn4, Rm6
0x08000097 : Branch with Link and Exchange : Rm1
0x08000098 : Arithmetic Shift Right (immediate) : Rd2, Rm5, #20
0x08000098 : Store Register Byte : Rt0, Rn5, Rm2
0x08000098 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000098 : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x08000099 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x08000099 : Logical Shift Right (immediate) : Rd6, Rm2, #12
0x08000099 : Compare immediate value from a register value : Rn4, #88
0x0800009a : Store Register calculates and address from a base register, stores a word : Rt1, Rn4, Rm2
0x0800009a : Compare substracts a register value from a register value : Rm0, Rn5
0x0800009a : Branch : #1482
0x0800009a : Store Register SP relative (immediate) : #40, Rt4
0x0800009b : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800009b : Load Register Byte (immediate) : Rt2, Rn6, #7
0x0800009b : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x0800009b : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x0800009c : loads a word from memory and writes it to a register : #144, Rt0
0x0800009c : Move immediate value to a register : Rd0, #64
0x0800009c : Store Register Halfword (immediate) : Rt1, Rn1, #16
0x0800009c : Arithmetic Shift Right (immediate) : Rd4, Rm4, #8
0x0800009d : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x0800009d : Move immediate value to a register : Rd1, #66
0x0800009d : Logical Shift Left (register)  : Rm0, Rd1
0x0800009d : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x0800009e : Arithmetic Shift Right (immediate) : Rd0, Rm5, #16
0x0800009e : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x0800009e : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800009e : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x0800009f : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x0800009f : Logical Shift Left (register)  : Rm0, Rd0
0x0800009f : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x0800009f :  : Rm1, Rd0
0x080000a0 : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x080000a0 :  : Rm1, Rd0
0x080000a0 : Branch : #450
0x080000a0 : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x080000a1 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080000a1 : Load Register Byte (immediate) : Rt0, Rn6, #3
0x080000a1 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080000a1 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x080000a2 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x080000a2 : Logical Shift Left (register)  : Rm0, Rd0
0x080000a2 : Store Register Byte (immediate) : Rt2, Rn5, #23
0x080000a3 : Branch : #1998
0x080000a3 : Load Register SP relative (immediate) : #58, Rt5
0x080000a3 : Sub immediate value to a register value : Rd7, #127
0x080000a4 : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x080000a4 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080000a4 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080000a5 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080000a5 : Branch with Link and Exchange : Rm1
0x080000a5 : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x080000a5 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080000a6 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x080000a6 : Move immediate value to a register : Rd0, #64
0x080000a6 : Store Register Halfword (immediate) : Rt1, Rn0, #0
0x080000a6 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x080000a7 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x080000a7 : Move immediate value to a register : Rd0, #64
0x080000a7 : Store Register (immediate) : Rt1, Rn0, #3
0x080000a7 : Store Register Halfword (immediate) : Rt4, Rn0, #8
0x080000a8 : Load Register (register) : Rt0, Rn6, Rm2
0x080000a8 : Load Register SP relative (immediate) : #58, Rt5
0x080000a8 : Store Register Byte (immediate) : Rt3, Rn5, #23
0x080000a9 : Sub immediate value to a register value : Rd1, #115
0x080000a9 : Branch : #1998
0x080000a9 : Move immediate value to a register : Rd3, #71
0x080000a9 : Load Register Halfword (immediate) : Rt4, Rn3, #24
0x080000aa : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x080000aa : Load Register Byte (immediate) : Rt6, Rn6, #15
0x080000ab : Load Register Signed Halfword (register) : Rt5, Rn7, Rm2
0x080000ab : Subtract with carry (register)  : Rm0, Rd2
0x080000ab : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x080000ab : Branch : #1224
0x080000ac : Store Register SP relative (immediate) : #32, Rt0
0x080000ac : Sub immediate value to a register value : Rd6, #124
0x080000ac : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x080000ad : Logical Shift Left (register)  : Rm0, Rd0
0x080000ad : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x080000ad : Branch with Link : #232, #232
0x080000ad : Load Register Signed Halfword (register) : Rt6, Rn7, Rm6
0x080000ae : Load Register Byte (immediate) : Rt2, Rn7, #23
0x080000ae : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x080000ae : Arithmetic Shift Right (immediate) : Rd7, Rm5, #28
0x080000ae : Logical Shift Left (register)  : Rm0, Rd0
0x080000af : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080000af : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x080000af : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x080000af : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x080000b0 : Move immediate value to a register : Rd1, #66
0x080000b0 : Logical Shift Left (register)  : Rm0, Rd1
0x080000b0 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x080000b0 : Store Register SP relative (immediate) : #40, Rt4
0x080000b1 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x080000b1 : Load Register Halfword (immediate) : Rt2, Rn2, #4
0x080000b1 : Move immediate value to a register : Rd5, #74
0x080000b1 : loads a word from memory and writes it to a register : #145, Rt0
0x080000b2 : Move immediate value to a register : Rd2, #68
0x080000b2 : Arithmetic Shift Right (immediate) : Rd1, Rm5, #16
0x080000b2 : Store Register Halfword : Rt4, Rn4, Rm2
0x080000b2 : Subtract with carry (register)  : Rm0, Rd2
0x080000b3 : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x080000b3 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x080000b3 : Load Register SP relative (immediate) : #58, Rt5
0x080000b4 : Store Register Byte (immediate) : Rt2, Rn5, #23
0x080000b4 : Load Register Halfword (immediate) : Rt3, Rn2, #4
0x080000b4 : Move immediate value to a register : Rd7, #78
0x080000b4 : ADD (SP plus immediate) adds an immediate value to the SP value : #81, Rd0
0x080000b5 : Address to Register adds an immediate value to the PC value : #68, Rd2
0x080000b5 : Load Register SP relative (immediate) : #53, Rt2
0x080000b5 : Load Register (immediate) : Rt4, Rn2, #11
0x080000b5 : Add a register value : Rd3, Rn6, Rm4
0x080000b6 : Store Register (immediate) : Rt5, Rn1, #27
0x080000b6 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x080000b6 : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x080000b6 : Load Register (register) : Rt0, Rn6, Rm2
0x080000b7 : Store Register (immediate) : Rt0, Rn0, #3
0x080000b7 : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x080000b7 : Arithmetic Shift Right (immediate) : Rd4, Rm5, #24
0x080000b7 : Branch : #192
0x080000b8 : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x080000b8 : Load Register Byte (immediate) : Rt0, Rn6, #3
0x080000b8 : Add immediate value to a register value : Rd3, Rn7, Rm4
0x080000b9 : Store Register Byte (immediate) : Rt7, Rn5, #31
0x080000b9 : Store Register (immediate) : Rt3, Rn0, #7
0x080000b9 : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x080000b9 : Branch with Link : #748, #748
0x080000ba : SUB immediate value to a register value : Rd6, Rn7, Rm4
0x080000ba : Load Register Byte (immediate) : Rt3, Rn7, #23
0x080000ba : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080000ba : Branch with Link and Exchange : Rm1
0x080000bb : Store Register (immediate) : Rt2, Rn0, #7
0x080000bb : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x080000bb : Branch : #1740
0x080000bb : Load Register SP relative (immediate) : #48, Rt0
0x080000bc : Sub immediate value to a register value : Rd6, #124
0x080000bc : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x080000bc : Logical Shift Left (register)  : Rm0, Rd0
0x080000bd : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x080000bd : Branch with Link : #232, #232
0x080000bd : SUB immediate value to a register value : Rd6, Rn7, Rm4
0x080000bd : Load Register Byte (immediate) : Rt2, Rn7, #23
0x080000be : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080000be : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x080000be : Store Register (immediate) : Rt0, Rn0, #3
0x080000be : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080000bf : Store Register Halfword (immediate) : Rt4, Rn1, #24
0x080000bf : Add a register value : Rd0, Rn6, Rm0
0x080000bf : ADD (SP plus immediate) adds an immediate value to the SP value : #80, Rd0
0x080000bf : Address to Register adds an immediate value to the PC value : #67, Rd1
0x080000c0 : Sub immediate value to a register value : Rd2, #117
0x080000c0 : Pack Halfword : Rn4, #4, Rd3, #2, tb0, T0, Rn4
0x080000c0 : Logical Shift Right (immediate) : Rd5, Rm3, #24
0x080000c1 : Load Register SP relative (immediate) : #63, Rt7
0x080000c1 : Load Register Byte (immediate) : Rt6, Rn7, #31
0x080000c1 : Add a register value : Rd3, Rn6, Rm4
0x080000c1 : Store Register (immediate) : Rt7, Rn1, #31
0x080000c2 : Store Register calculates and address from a base register, stores a word : Rt3, Rn4, Rm6
0x080000c2 : Move copies a value from a register to the destination register : Rd4, Rm1
0x080000c2 : Branch with Link : #490, #490
0x080000c3 : Sub immediate value to a register value : Rd7, #127
0x080000c3 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x080000c3 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080000c4 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x080000c4 : ADD (SP plus immediate) adds an immediate value to the SP value : #80, Rd0
0x080000c4 : Address to Register adds an immediate value to the PC value : #64, Rd0
0x080000c4 : Subtract a register value : Rd5, Rn6, Rm0
0x080000c5 : Load Register (immediate) : Rt4, Rn2, #11
0x080000c5 : Store Register calculates and address from a base register, stores a word : Rt3, Rn4, Rm6
0x080000c5 : Move copies a value from a register to the destination register : Rd5, Rm1
0x080000c5 : Store Register Byte : Rt2, Rn5, Rm6
0x080000c6 : Store Register Byte : Rt0, Rn5, Rm2
0x080000c6 : Arithmetic Shift Right (immediate) : Rd2, Rm5, #20
0x080000c6 : Store Register Byte : Rt2, Rn5, Rm6
0x080000c6 : Add immediate value to a register value : Rd1, #98
0x080000c7 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn5
0x080000c7 : Store Register (immediate) : Rt6, Rn0, #15
0x080000c7 : Load Register Halfword (immediate) : Rt0, Rn3, #16
0x080000c7 : Branch with Link : #748, #748
0x080000c8 : Sub immediate value to a register value : Rd7, #126
0x080000c8 : loads a word from memory and writes it to a register : #159, Rt7
0x080000c8 : Store Register (immediate) : Rt2, Rn0, #7
0x080000c9 : Store Register Halfword (immediate) : Rt1, Rn1, #16
0x080000c9 : Branch : #1740
0x080000c9 : Load Register SP relative (immediate) : #48, Rt0
0x080000ca : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x080000ca : Sub immediate value to a register value : Rd7, #127
0x080000ca : Logical Shift Left (register)  : Rm0, Rd1
0x080000ca : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x080000cb : Branch with Link : #232, #232
0x080000cb : SUB immediate value to a register value : Rd6, Rn7, Rm4
0x080000cb : Load Register Byte (immediate) : Rt2, Rn7, #23
0x080000cb : Subtract with carry (register)  : Rm0, Rd3
0x080000cc : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x080000cc : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080000cc : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x080000cd : Sub immediate value to a register value : Rd7, #126
0x080000cd : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn7
0x080000cd : Load Register Byte (immediate) : Rt6, Rn7, #31
0x080000ce : Load Register Signed Halfword (register) : Rt6, Rn7, Rm6
0x080000ce : Load Register Byte (immediate) : Rt3, Rn7, #23
0x080000cf : Store Register Byte (immediate) : Rt3, Rn5, #23
0x080000cf : Add immediate value to a register value : Rd7, #110
0x080000d0 : Store Register SP relative (immediate) : #38, Rt3
0x080000d0 : loads a word from memory and writes it to a register : #155, Rt5
0x080000d0 : Load Register Halfword (immediate) : Rt2, Rn2, #4
0x080000d0 : Move immediate value to a register : Rd4, #73
0x080000d1 : Sub immediate value to a register value : Rd0, #113
0x080000d1 : Branch : #708
0x080000d1 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn3
0x080000d1 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080000d2 : loads a word from memory and writes it to a register : #152, Rt4
0x080000d2 : Add immediate value to a register value : Rd0, #97
0x080000d2 : Store Register Halfword : Rt6, Rn4, Rm6
0x080000d3 : Load Register SP relative (immediate) : #63, Rt7
0x080000d3 : Load Register Byte (immediate) : Rt6, Rn7, #31
0x080000d3 : loads a word from memory and writes it to a register : #147, Rt1
0x080000d4 : Move immediate value to a register : Rd7, #79
0x080000d4 : Branch with Link : #233, #233
0x080000d4 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x080000d5 : Sub immediate value to a register value : Rd7, #127
0x080000d5 : Logical Shift Left (register)  : Rm0, Rd1
0x080000d5 : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x080000d5 : Branch with Link : #232, #232
0x080000d6 : Compare immediate value from a register value : Rn7, #95
0x080000d6 : Store Register Halfword (immediate) : Rt1, Rn1, #16
0x080000d7 : Arithmetic Shift Right (immediate) : Rd5, Rm4, #8
0x080000d7 : Add a register value : Rd0, Rn6, Rm0
0x080000d7 : Store Register (immediate) : Rt2, Rn0, #7
0x080000d7 : Store Register (immediate) : Rt3, Rn0, #7
0x080000d8 : Store Register Halfword (immediate) : Rt4, Rn1, #24
0x080000d8 : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x080000d8 : Add a register value : Rd0, Rn6, Rm0
0x080000d8 : Logical Shift Left (register)  : Rm0, Rd0
0x080000d9 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080000d9 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x080000d9 : Load Register SP relative (immediate) : #58, Rt5
0x080000da : Store Register Byte (immediate) : Rt2, Rn5, #23
0x080000da : Load Register SP relative (immediate) : #51, Rt1
0x080000da : Store Register (immediate) : Rt6, Rn1, #31
0x080000da : Load Register Halfword (immediate) : Rt3, Rn2, #4
0x080000db : Move immediate value to a register : Rd6, #76
0x080000db : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x080000dc : Sub immediate value to a register value : Rd7, #127
0x080000dc : Logical Shift Left (register)  : Rm0, Rd1
0x080000dc : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x080000dc : Branch with Link : #232, #232
0x080000dd : Load Register Signed Halfword (register) : Rt6, Rn7, Rm6
0x080000dd : Load Register Byte (immediate) : Rt2, Rn7, #23
0x080000dd : Compare substract register value from register value : Rn1, Rm3
0x080000dd : Arithmetic Shift Right (immediate) : Rd7, Rm5, #28
0x080000de : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080000de : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x080000de : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080000de : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080000df : Load Register (immediate) : Rt0, Rn2, #3
0x080000df : Address to Register adds an immediate value to the PC value : #64, Rd0
0x080000df : Arithmetic Shift Right (immediate) : Rd5, Rm5, #24
0x080000df : Load Register Halfword (register) : Rt4, Rn6, Rm2
0x080000e0 : Logical Shift Right (immediate) : Rd6, Rm3, #28
0x080000e0 : Sub immediate value to a register value : Rd4, #120
0x080000e0 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x080000e1 : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x080000e1 : Logical Shift Left (register)  : Rm0, Rd0
0x080000e1 : Move immediate value to a register : Rd4, #72
0x080000e2 : Store Register SP relative (immediate) : #32, Rt0
0x080000e2 : Branch : #708
0x080000e2 : Load Register Halfword (immediate) : Rt2, Rn2, #4
0x080000e2 : Sub immediate value to a register value : Rd6, #124
0x080000e3 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x080000e3 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn7
0x080000e4 : Sub immediate value to a register value : Rd6, #124
0x080000e4 : Store Register Byte (immediate) : Rt7, Rn4, #15
0x080000e4 : Sub immediate value to a register value : Rd5, #123
0x080000e5 : loads a word from memory and writes it to a register : #158, Rt7
0x080000e5 : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x080000e5 : Logical Shift Left (immediate) : Rd1, Rm1, #16
0x080000e6 : Load Register (immediate) : Rt0, Rn2, #3
0x080000e6 : Address to Register adds an immediate value to the PC value : #64, Rd0
0x080000e6 : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x080000e6 : Subtract a register value : Rd4, Rn6, Rm0
0x080000e7 : Logical Shift Left (register)  : Rm0, Rd0
0x080000e7 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080000e7 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x080000e8 : Add immediate value to a register value : Rd2, Rn7, Rm4
0x080000e8 : Store Register Byte (immediate) : Rt2, Rn5, #23
0x080000e8 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x080000e8 : Logical Shift Left (immediate) : Rd6, Rm1, #28
0x080000e9 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080000e9 : Move immediate value to a register : Rd0, #64
0x080000e9 : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x080000e9 : Move immediate value to a register : Rd2, #68
0x080000ea : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x080000ea : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x080000ea : Add immediate value to a register value : Rd0, Rn7, Rm0
0x080000ea : Store Register Byte (immediate) : Rt0, Rn4, #3
0x080000eb : Store Register (immediate) : Rt3, Rn0, #7
0x080000eb : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x080000eb : Load Register (register) : Rt0, Rn6, Rm2
0x080000ec : Load Register SP relative (immediate) : #58, Rt5
0x080000ec : Store Register Byte (immediate) : Rt3, Rn5, #23
0x080000ec : loads a word from memory and writes it to a register : #147, Rt1
0x080000ec : Move immediate value to a register : Rd7, #78
0x080000ed : Store Register Halfword : Rt4, Rn4, Rm2
0x080000ed : Load Register Halfword (immediate) : Rt2, Rn3, #20
0x080000ed : Add immediate value to a register value : Rd5, #106
0x080000ee : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x080000ee : Move immediate value to a register : Rd3, #70
0x080000ee : Store Register calculates and address from a base register, stores a word : Rt1, Rn4, Rm2
0x080000ee : Compare substracts a register value from a register value : Rm0, Rn4
0x080000ef : Address to Register adds an immediate value to the PC value : #74, Rd5
0x080000ef : Store Register SP relative (immediate) : #40, Rt4
0x080000ef : Subtract a register value : Rd4, Rn6, Rm0
0x080000ef : Load Register (immediate) : Rt2, Rn2, #7
0x080000f0 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080000f0 : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x080000f0 : Logical Shift Left (register)  : Rm0, Rd0
0x080000f1 : Load Register (immediate) : Rt2, Rn3, #23
0x080000f1 : Load Register Signed Byte (register) : Rt5, Rn5, Rm2
0x080000f1 : Load Register Halfword (register) : Rt6, Rn6, Rm6
0x080000f2 : Branch : #1482
0x080000f2 : Store Register SP relative (immediate) : #43, Rt5
0x080000f2 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080000f2 : Load Register Byte (immediate) : Rt2, Rn6, #7
0x080000f3 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080000f3 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x080000f3 : Address to Register adds an immediate value to the PC value : #64, Rd0
0x080000f3 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080000f4 : Load Register Halfword (immediate) : Rt4, Rn2, #8
0x080000f4 : Compare immediate value from a register value : Rn0, #80
0x080000f4 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x080000f4 : Move immediate value to a register : Rd2, #69
0x080000f5 : loads a word from memory and writes it to a register : #153, Rt4
0x080000f5 : Add immediate value to a register value : Rd2, #100
0x080000f5 : Store Register Byte : Rt1, Rn5, Rm2
0x080000f5 : Store Register Halfword : Rt6, Rn4, Rm6
0x080000f6 : Address to Register adds an immediate value to the PC value : #74, Rd5
0x080000f6 : Store Register SP relative (immediate) : #42, Rt5
0x080000f6 : Load Register Halfword (register) : Rt4, Rn6, Rm2
0x080000f6 : Load Register (immediate) : Rt2, Rn2, #7
0x080000f7 : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x080000f7 : Arithmetic Shift Right (immediate) : Rd5, Rm5, #24
0x080000f7 : Address to Register adds an immediate value to the PC value : #64, Rd0
0x080000f7 : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x080000f8 : Load Register (immediate) : Rt4, Rn2, #11
0x080000f8 : ADD (SP plus immediate) adds an immediate value to the SP value : #80, Rd0
0x080000f8 : Branch : #1741
0x080000f8 : Load Register SP relative (immediate) : #53, Rt2
0x080000f9 : Sub immediate value to a register value : Rd7, #127
0x080000f9 : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x080000fa : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080000fa : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080000fa : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080000fa : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x080000fb : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080000fb : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x080000fb : Move immediate value to a register : Rd0, #64
0x080000fc : Store Register Halfword (immediate) : Rt1, Rn0, #0
0x080000fc : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x080000fc : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x080000fc : Move immediate value to a register : Rd0, #64
0x080000fd : Store Register (immediate) : Rt1, Rn0, #3
0x080000fd : Store Register Halfword (immediate) : Rt4, Rn0, #8
0x080000fd : Load Register (register) : Rt0, Rn6, Rm2
0x080000fe : Load Register SP relative (immediate) : #58, Rt5
0x080000fe : Store Register Byte (immediate) : Rt3, Rn5, #23
0x080000fe : Sub immediate value to a register value : Rd1, #115
0x080000fe : Branch : #1998
0x080000ff : Move immediate value to a register : Rd3, #71
0x080000ff : Load Register Halfword (immediate) : Rt4, Rn3, #24
0x080000ff : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x08000100 : Subtract a register value : Rd6, Rn6, Rm4
0x08000100 : Load Register (immediate) : Rt1, Rn3, #19
0x08000100 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000100 : Move copies a value from a register to the destination register : Rd5, Rm1
0x08000101 : Address to Register adds an immediate value to the PC value : #66, Rd1
0x08000101 : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x08000101 : Load Register Halfword (immediate) : Rt4, Rn2, #8
0x08000101 : Compare immediate value from a register value : Rn0, #80
0x08000102 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x08000102 : Move immediate value to a register : Rd2, #69
0x08000102 : loads a word from memory and writes it to a register : #153, Rt4
0x08000102 : Add immediate value to a register value : Rd2, #100
0x08000103 : Store Register SP relative (immediate) : #41, Rt4
0x08000103 : Store Register Halfword : Rt6, Rn4, Rm6
0x08000103 : Load Register Halfword (immediate) : Rt2, Rn2, #4
0x08000103 : Move immediate value to a register : Rd5, #74
0x08000104 : ADD (SP plus immediate) adds an immediate value to the SP value : #81, Rd0
0x08000104 : Address to Register adds an immediate value to the PC value : #68, Rd2
0x08000104 : Logical Shift Right (immediate) : Rd5, Rm2, #8
0x08000104 : Compare immediate value from a register value : Rn2, #84
0x08000105 : Logical Shift Left (register)  : Rm0, Rd1
0x08000105 : Logical Shift Left (immediate) : Rd5, Rm0, #8
0x08000105 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x08000106 : Load Register SP relative (immediate) : #58, Rt5
0x08000106 : Store Register Byte (immediate) : Rt2, Rn5, #23
0x08000106 : Load Register Halfword (immediate) : Rt3, Rn2, #4
0x08000106 : Move immediate value to a register : Rd7, #78
0x08000107 : loads a word from memory and writes it to a register : #145, Rt0
0x08000107 : Move immediate value to a register : Rd2, #68
0x08000107 : Store Register (immediate) : Rt1, Rn1, #19
0x08000107 : Store Register SP relative (immediate) : #36, Rt2
0x08000108 : Store Register SP relative (immediate) : #44, Rt6
0x08000108 : Load Register (register) : Rt2, Rn6, Rm6
0x08000108 : loads a word from memory and writes it to a register : #146, Rt1
0x08000108 : Move immediate value to a register : Rd5, #75
0x08000109 : Store Register Halfword : Rt4, Rn4, Rm2
0x08000109 : SUB immediate value to a register value : Rd7, Rn7, Rm4
0x0800010a : Load Register Byte (immediate) : Rt6, Rn7, #31
0x0800010a : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x0800010a : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x0800010a : Store Register (immediate) : Rt0, Rn0, #3
0x0800010b : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800010b : Branch with Link : #748, #748
0x0800010b : Load Register Byte (immediate) : Rt3, Rn7, #23
0x0800010c : Add immediate value to a register value : Rd3, Rn7, Rm4
0x0800010c : Store Register Byte (immediate) : Rt7, Rn5, #31
0x0800010c : Address to Register adds an immediate value to the PC value : #67, Rd1
0x0800010c : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x0800010d : ADD (SP plus immediate) adds an immediate value to the SP value : #84, Rd2
0x0800010d : ADD (SP plus immediate) adds an immediate value to the SP value : #80, Rd0
0x0800010d : Logical Shift Right (immediate) : Rd5, Rm2, #8
0x0800010d : Compare immediate value from a register value : Rn2, #85
0x0800010e : Move immediate value to a register : Rd0, #65
0x0800010e : Store Register Halfword (immediate) : Rt5, Rn0, #8
0x0800010e : Compare substracts a register value from a register value : Rm0, Rn4
0x0800010e : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x0800010f : Store Register Byte (immediate) : Rt0, Rn5, #19
0x0800010f : Branch with Link : #1006, #1006
0x08000110 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x08000110 : Sub immediate value to a register value : Rd7, #127
0x08000110 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000110 : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x08000111 : Branch : #192
0x08000111 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000112 : Load Register Byte (immediate) : Rt5, Rn7, #27
0x08000113 : ADD (SP plus immediate) adds an immediate value to the SP value : #95, Rd7
0x08000113 : Load Register Signed Byte (register) : Rt5, Rn5, Rm2
0x08000113 : Load Register Halfword (register) : Rt5, Rn6, Rm2
0x08000114 : Add immediate value to a register value : Rd5, #106
0x08000114 : Address to Register adds an immediate value to the PC value : #70, Rd3
0x08000114 : Load Register Halfword (immediate) : Rt2, Rn3, #20
0x08000115 : Load Register Halfword (register) : Rt4, Rn6, Rm2
0x08000115 : Load Register (immediate) : Rt1, Rn2, #3
0x08000115 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn5
0x08000115 : Arithmetic Shift Right (immediate) : Rd5, Rm5, #24
0x08000116 : Load Register Halfword (immediate) : Rt0, Rn3, #16
0x08000116 : Add immediate value to a register value : Rd1, #98
0x08000116 : Load Register (immediate) : Rt1, Rn2, #3
0x08000116 : Address to Register adds an immediate value to the PC value : #70, Rd3
0x08000117 : Store Register Halfword (immediate) : Rt5, Rn1, #24
0x08000117 : Subtract a register value : Rd4, Rn6, Rm0
0x08000117 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x08000117 : Move immediate value to a register : Rd1, #67
0x08000118 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000118 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x08000118 : Logical Shift Left (register)  : Rm0, Rd0
0x08000119 : Load Register SP relative (immediate) : #58, Rt5
0x08000119 : Store Register Byte (immediate) : Rt0, Rn5, #19
0x08000119 : Load Register (register) : Rt3, Rn6, Rm6
0x08000119 : Store Register (immediate) : Rt6, Rn1, #31
0x0800011a : Branch : #1483
0x0800011a : Store Register SP relative (immediate) : #44, Rt6
0x0800011a : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800011a : Load Register Byte (immediate) : Rt2, Rn6, #7
0x0800011b : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x0800011b : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x0800011b : Logical Shift Left (register)  : Rm0, Rd0
0x0800011c : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x0800011c : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x0800011c : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x0800011c : Move immediate value to a register : Rd1, #66
0x0800011d : Store Register calculates and address from a base register, stores a word : Rt1, Rn4, Rm2
0x0800011d : Compare substracts a register value from a register value : Rm0, Rn4
0x0800011d : Store Register Byte : Rt2, Rn5, Rm6
0x0800011d : Store Register Byte : Rt0, Rn5, Rm2
0x0800011e : Address to Register adds an immediate value to the PC value : #74, Rd5
0x0800011e : Store Register SP relative (immediate) : #42, Rt5
0x0800011e : Load Register Halfword (register) : Rt4, Rn6, Rm2
0x0800011e : Load Register (immediate) : Rt2, Rn2, #7
0x0800011f : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x0800011f : Arithmetic Shift Right (immediate) : Rd5, Rm5, #24
0x0800011f : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000120 : Store Register Byte (immediate) : Rt0, Rn4, #3
0x08000120 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x08000120 : Branch : #1998
0x08000120 : Load Register SP relative (immediate) : #56, Rt4
0x08000121 : Sub immediate value to a register value : Rd7, #127
0x08000121 : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x08000122 : Load Register Byte (immediate) : Rt4, Rn7, #27
0x08000122 : SUB immediate value to a register value : Rd7, Rn7, Rm4
0x08000122 : Address to Register adds an immediate value to the PC value : #64, Rd0
0x08000123 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x08000123 : Logical Shift Right (immediate) : Rd4, Rm2, #8
0x08000123 : Compare immediate value from a register value : Rn0, #80
0x08000123 : Address to Register adds an immediate value to the PC value : #65, Rd0
0x08000124 : Store Register Halfword (immediate) : Rt5, Rn0, #8
0x08000124 : Logical Shift Right (immediate) : Rd4, Rm2, #8
0x08000124 : Compare immediate value from a register value : Rn0, #80
0x08000124 : Store Register (immediate) : Rt1, Rn0, #3
0x08000125 : Store Register Halfword (immediate) : Rt5, Rn0, #8
0x08000125 : Load Register (register) : Rt0, Rn6, Rm2
0x08000125 : Load Register SP relative (immediate) : #58, Rt5
0x08000126 : Store Register Byte (immediate) : Rt3, Rn5, #23
0x08000126 : Sub immediate value to a register value : Rd1, #115
0x08000126 : Branch : #1998
0x08000126 : Move immediate value to a register : Rd3, #71
0x08000127 : Load Register Halfword (immediate) : Rt4, Rn3, #24
0x08000127 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x08000127 : Subtract a register value : Rd6, Rn6, Rm4
0x08000128 : Load Register (immediate) : Rt1, Rn3, #19
0x08000128 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000128 : Move copies a value from a register to the destination register : Rd5, Rm1
0x08000128 : Subtract with carry (register)  : Rm0, Rd2
0x08000129 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000129 : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x08000129 : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x08000129 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x0800012a : Move immediate value to a register : Rd1, #66
0x0800012a : Store Register calculates and address from a base register, stores a word : Rt1, Rn4, Rm2
0x0800012a : Compare substracts a register value from a register value : Rm0, Rn4
0x0800012a : Arithmetic Shift Right (immediate) : Rd2, Rm5, #20
0x0800012b : Store Register Byte : Rt0, Rn5, Rm2
0x0800012b : Branch : #450
0x0800012b : Store Register Halfword (immediate) : Rt2, Rn1, #20
0x0800012b : Load Register Byte (immediate) : Rt4, Rn7, #27
0x0800012c : SUB immediate value to a register value : Rd7, Rn7, Rm4
0x0800012c : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800012c : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x0800012d : Load Register Byte (immediate) : Rt0, Rn6, #3
0x0800012d : Branch : #192
0x0800012d : Branch with Link : #1007, #1007
0x0800012e : Load Register Byte (immediate) : Rt3, Rn7, #23
0x0800012e : Add immediate value to a register value : Rd3, Rn7, Rm4
0x0800012e : Store Register Byte (immediate) : Rt7, Rn5, #31
0x0800012e : Address to Register adds an immediate value to the PC value : #67, Rd1
0x0800012f : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x0800012f : Load Register Halfword (immediate) : Rt4, Rn2, #8
0x0800012f : Compare immediate value from a register value : Rn0, #80
0x0800012f : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x08000130 : Move immediate value to a register : Rd2, #69
0x08000130 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000130 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x08000130 : Logical Shift Left (register)  : Rm0, Rd0
0x08000131 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x08000132 : Conditional branch : cond:7, #42, cond:7
0x08000132 : Compare immediate value from a register value : Rn7, #94
0x08000132 : Load Register Halfword (immediate) : Rt1, Rn2, #0
0x08000132 : Move immediate value to a register : Rd2, #69
0x08000133 : Add a register value : Rd1, Rn6, Rm0
0x08000133 : Store Register (immediate) : Rt4, Rn0, #11
0x08000133 : Address to Register adds an immediate value to the PC value : #67, Rd1
0x08000133 : Store Register Halfword (immediate) : Rt4, Rn1, #24
0x08000134 : loads a word from memory and writes it to a register : #148, Rt2
0x08000134 : Compare immediate value from a register value : Rn0, #80
0x08000134 : Logical Shift Left (immediate) : Rd1, Rm1, #16
0x08000134 : Arithmetic Shift Right (immediate) : Rd5, Rm4, #8
0x08000135 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000135 : Store Register (immediate) : Rt0, Rn0, #3
0x08000135 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000136 : Move immediate value to a register : Rd6, #76
0x08000136 : Load Register SP relative (immediate) : #48, Rt0
0x08000136 : Store Register (immediate) : Rt4, Rn0, #11
0x08000136 : Load Register Halfword (immediate) : Rt3, Rn2, #4
0x08000137 : Branch with Link : #748, #748
0x08000137 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x08000137 : Sub immediate value to a register value : Rd7, #127
0x08000138 : Store Register (immediate) : Rt1, Rn0, #3
0x08000138 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000138 : Branch : #1740
0x08000138 : Load Register SP relative (immediate) : #48, Rt0
0x08000139 : Load Register Byte (immediate) : Rt5, Rn7, #27
0x0800013a : SUB immediate value to a register value : Rd6, Rn7, Rm4
0x0800013a : Load Register Byte (immediate) : Rt3, Rn7, #23
0x0800013a : Store Register (immediate) : Rt3, Rn0, #7
0x0800013b : Store Register Halfword (immediate) : Rt7, Rn1, #28
0x0800013b : Load Register (register) : Rt0, Rn6, Rm2
0x0800013c : Load Register SP relative (immediate) : #63, Rt7
0x0800013c : Load Register Byte (immediate) : Rt6, Rn7, #31
0x0800013c : Add a register value : Rd3, Rn6, Rm4
0x0800013c : Store Register (immediate) : Rt7, Rn1, #31
0x0800013d : Store Register calculates and address from a base register, stores a word : Rt3, Rn4, Rm6
0x0800013d : Move copies a value from a register to the destination register : Rd4, Rm1
0x0800013d : Branch with Link : #490, #490
0x0800013e : Sub immediate value to a register value : Rd7, #127
0x0800013e : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x0800013e : Load Register Halfword (immediate) : Rt4, Rn3, #24
0x0800013f : Sub immediate value to a register value : Rd0, #113
0x0800013f : Load Register Halfword (immediate) : Rt1, Rn2, #0
0x0800013f : Move immediate value to a register : Rd3, #71
0x0800013f : Sub immediate value to a register value : Rd0, #113
0x08000140 : Branch : #708
0x08000140 : Bit clear performs a bitwise AND of a register value and the complement of a register value : Rm0, Rd7
0x08000140 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000141 : Store Register calculates and address from a base register, stores a word : Rt1, Rn4, Rm2
0x08000141 : Load Register SP relative (immediate) : #63, Rt7
0x08000141 : Load Register Byte (immediate) : Rt6, Rn7, #31
0x08000142 : Compare immediate value from a register value : Rn1, #83
0x08000142 : Address to Register adds an immediate value to the PC value : #79, Rd7
0x08000142 : Compare substracts a register value from a register value : Rm0, Rn5
0x08000142 : Logical Shift Right (immediate) : Rd4, Rm2, #8
0x08000143 : Move immediate value to a register : Rd4, #72
0x08000143 : Store Register SP relative (immediate) : #33, Rt0
0x08000143 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x08000143 : Logical Shift Right (immediate) : Rd2, Rm2, #4
0x08000144 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000145 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000145 : Add a register value : Rd0, Rn6, Rm0
0x08000145 : Store Register (immediate) : Rt0, Rn0, #3
0x08000146 : Store Register (immediate) : Rt3, Rn0, #7
0x08000146 : Store Register Halfword (immediate) : Rt4, Rn1, #24
0x08000146 : Load Register (register) : Rt0, Rn6, Rm2
0x08000147 : Sub immediate value to a register value : Rd5, #122
0x08000147 : Logical Shift Right (immediate) : Rd6, Rm3, #28
0x08000147 : Arithmetic Shift Right (immediate) : Rd0, Rm5, #16
0x08000148 : Store Register calculates and address from a base register, stores a word : Rt1, Rn4, Rm2
0x08000148 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000148 : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x08000148 : Add immediate value to a register value : Rd0, #96
0x08000149 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x08000149 : Move immediate value to a register : Rd3, #70
0x08000149 : Load Register Halfword (immediate) : Rt0, Rn3, #16
0x08000149 : Store Register Halfword : Rt4, Rn4, Rm2
0x0800014a : loads a word from memory and writes it to a register : #145, Rt0
0x0800014a : Arithmetic Shift Right (immediate) : Rd2, Rm5, #20
0x0800014a : Store Register Byte : Rt1, Rn5, Rm2
0x0800014a : Branch : #450
0x0800014b : Store Register Halfword (immediate) : Rt2, Rn1, #20
0x0800014b : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800014b : Load Register Byte (immediate) : Rt0, Rn6, #3
0x0800014b : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x0800014c : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x0800014c : loads a word from memory and writes it to a register : #144, Rt0
0x0800014c : Move immediate value to a register : Rd0, #64
0x0800014c : Store Register Byte : Rt1, Rn5, Rm2
0x0800014d : Store Register Halfword : Rt4, Rn4, Rm2
0x0800014d : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x0800014d : Arithmetic Shift Right (immediate) : Rd2, Rm5, #20
0x0800014e : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800014e : Logical Shift Left (register)  : Rm0, Rd0
0x0800014e : Branch : #1224
0x0800014f : Store Register SP relative (immediate) : #32, Rt0
0x0800014f : Load Register Signed Halfword (register) : Rt4, Rn7, Rm2
0x0800014f : Load Register Byte (immediate) : Rt2, Rn6, #7
0x0800014f : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x08000150 : Arithmetic Shift Right (immediate) : Rd7, Rm5, #28
0x08000150 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x08000150 : Subtract with carry (register)  : Rm0, Rd2
0x08000150 : Branch with Link : #490, #490
0x08000151 : Load Register Signed Halfword (register) : Rt6, Rn7, Rm6
0x08000151 : Load Register Byte (immediate) : Rt2, Rn7, #23
0x08000151 : Store Register (immediate) : Rt3, Rn1, #23
0x08000151 : Store Register SP relative (immediate) : #47, Rt7
0x08000152 : Load Register (register) : Rt2, Rn6, Rm6
0x08000152 : Branch with Link : #491, #491
0x08000153 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn7
0x08000154 : Load Register Signed Byte (register) : Rt6, Rn5, Rm6
0x08000154 : Load Register Byte (register) : Rt1, Rn7, Rm2
0x08000154 : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x08000154 : Arithmetic Shift Right (immediate) : Rd3, Rm5, #20
0x08000155 : Branch : #192
0x08000155 : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x08000155 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn6
0x08000155 : Sub immediate value to a register value : Rd0, #112
0x08000156 : Load Register (immediate) : Rt7, Rn3, #31
0x08000157 : Store Register SP relative (immediate) : #35, Rt1
0x08000157 : Move copies a value from a register to the destination register : Rd5, Rm1
0x08000157 : Logical Shift Right (immediate) : Rd2, Rm2, #4
0x08000157 : Move immediate value to a register : Rd4, #72
0x08000158 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000158 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x08000158 : Move immediate value to a register : Rd0, #64
0x08000158 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000159 : loads a word from memory and writes it to a register : #144, Rt0
0x08000159 : Store Register Byte (immediate) : Rt1, Rn5, #19
0x0800015a : Load Register Halfword (immediate) : Rt3, Rn3, #20
0x0800015a : Add immediate value to a register value : Rd7, #110
0x0800015a : Add a register value : Rd1, Rn6, Rm0
0x0800015a : Store Register (immediate) : Rt6, Rn0, #15
0x0800015b : Address to Register adds an immediate value to the PC value : #67, Rd1
0x0800015b : Store Register Halfword (immediate) : Rt4, Rn1, #24
0x0800015b : Load Register Halfword (register) : Rt4, Rn6, Rm2
0x0800015b : Load Register (immediate) : Rt0, Rn2, #3
0x0800015c : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn5
0x0800015c : Arithmetic Shift Right (immediate) : Rd5, Rm5, #24
0x0800015c : Store Register Byte (immediate) : Rt2, Rn4, #7
0x0800015d : Load Register Byte (register) : Rt3, Rn7, Rm6
0x0800015d : Store Register Byte (immediate) : Rt6, Rn5, #31
0x0800015d : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x0800015d : Arithmetic Shift Right (immediate) : Rd6, Rm5, #28
0x0800015e : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800015e : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x0800015f : Load Register Halfword (immediate) : Rt0, Rn3, #16
0x0800015f : Add immediate value to a register value : Rd0, #96
0x0800015f : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x0800015f : Move immediate value to a register : Rd3, #70
0x08000160 : Add immediate value to a register value : Rd0, #97
0x08000160 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn2
0x08000160 : Arithmetic Shift Right (immediate) : Rd6, Rm4, #12
0x08000160 : loads a word from memory and writes it to a register : #152, Rt4
0x08000161 : Subtract with carry (register)  : Rm0, Rd2
0x08000161 : Logical Shift Left (immediate) : Rd1, Rm1, #16
0x08000161 : Move immediate value to a register : Rd4, #72
0x08000161 : Store Register SP relative (immediate) : #32, Rt0
0x08000162 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x08000162 : Logical Shift Right (immediate) : Rd2, Rm2, #4
0x08000162 : Store Register (immediate) : Rt0, Rn0, #3
0x08000162 : Store Register Halfword (immediate) : Rt1, Rn0, #0
0x08000163 : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x08000163 : Add a register value : Rd0, Rn6, Rm0
0x08000163 : Store Register (immediate) : Rt0, Rn0, #3
0x08000163 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x08000164 : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x08000164 : Add a register value : Rd0, Rn6, Rm0
0x08000164 : Store Register (immediate) : Rt0, Rn0, #3
0x08000164 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x08000165 : Load Register (register) : Rt0, Rn6, Rm2
0x08000166 : Compare immediate value from a register value : Rn7, #94
0x08000166 : loads a word from memory and writes it to a register : #153, Rt4
0x08000166 : Add immediate value to a register value : Rd2, #101
0x08000166 : Add immediate value to a register value : Rd4, #105
0x08000167 : Store Register Halfword (immediate) : Rt6, Rn0, #12
0x08000167 : Logical Shift Right (immediate) : Rd2, Rm3, #20
0x08000167 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x08000168 : Move immediate value to a register : Rd0, #65
0x08000168 : Compare substracts a register value from a register value : Rm0, Rn4
0x08000168 : Logical Shift Right (immediate) : Rd2, Rm3, #20
0x08000169 : Add immediate value to a register value : Rd4, #104
0x08000169 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000169 : Logical Shift Left (immediate) : Rd6, Rm0, #12
0x08000169 : Store Register SP relative (immediate) : #32, Rt0
0x0800016a : Logical Shift Left (register)  : Rm0, Rd0
0x0800016a : Load Register Signed Halfword (register) : Rt7, Rn7, Rm6
0x0800016a : Load Register Byte (immediate) : Rt4, Rn7, #27
0x0800016b : Branch : #1483
0x0800016b : Store Register SP relative (immediate) : #47, Rt7
0x0800016b : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800016b : Load Register Byte (immediate) : Rt2, Rn6, #7
0x0800016c : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x0800016c : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x0800016c : Logical Shift Left (register)  : Rm0, Rd0
0x0800016d : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x0800016d : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x0800016d : loads a word from memory and writes it to a register : #144, Rt0
0x0800016d : Move immediate value to a register : Rd1, #66
0x0800016e : Logical Shift Left (immediate) : Rd1, Rm1, #16
0x0800016e : Arithmetic Shift Right (immediate) : Rd4, Rm4, #8
0x0800016e : Store Register Byte (immediate) : Rt0, Rn4, #3
0x0800016e : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn1
0x0800016f : Address to Register adds an immediate value to the PC value : #78, Rd7
0x0800016f : Load Register SP relative (immediate) : #56, Rt4
0x0800016f : Load Register Halfword (register) : Rt4, Rn6, Rm2
0x0800016f : Load Register (immediate) : Rt3, Rn2, #7
0x08000170 : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x08000170 : Arithmetic Shift Right (immediate) : Rd5, Rm5, #24
0x08000170 : Logical Shift Left (register)  : Rm0, Rd0
0x08000170 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000171 : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x08000171 : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x08000171 : Load Register (immediate) : Rt0, Rn2, #3
0x08000171 : Address to Register adds an immediate value to the PC value : #66, Rd1
0x08000172 : Load Register Signed Byte (register) : Rt5, Rn5, Rm2
0x08000172 : Load Register Halfword (register) : Rt4, Rn6, Rm2
0x08000172 : Add immediate value to a register value : Rd5, #106
0x08000173 : Address to Register adds an immediate value to the PC value : #70, Rd3
0x08000173 : Load Register Halfword (immediate) : Rt2, Rn3, #20
0x08000173 : Load Register Halfword (register) : Rt4, Rn6, Rm2
0x08000173 : Load Register (immediate) : Rt1, Rn2, #3
0x08000174 : Store Register SP relative (immediate) : #43, Rt5
0x08000174 : Load Register Signed Byte (register) : Rt5, Rn5, Rm2
0x08000174 : Compare immediate value from a register value : Rn1, #82
0x08000174 : Address to Register adds an immediate value to the PC value : #74, Rd5
0x08000175 : Store Register Halfword : Rt5, Rn4, Rm2
0x08000175 : loads a word from memory and writes it to a register : #148, Rt2
0x08000175 : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x08000175 : Arithmetic Shift Right (immediate) : Rd1, Rm5, #16
0x08000176 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000176 : Move immediate value to a register : Rd0, #64
0x08000176 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000177 : Branch : #708
0x08000177 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000177 : Load Register Byte (immediate) : Rt4, Rn7, #27
0x08000178 : SUB immediate value to a register value : Rd7, Rn7, Rm4
0x08000178 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x08000178 : Subtract with carry (register)  : Rm0, Rd3
0x08000178 : Branch with Link : #490, #490
0x08000179 : Load Register Byte (immediate) : Rt6, Rn7, #31
0x08000179 : Load Register SP relative (immediate) : #63, Rt7
0x08000179 : Branch with Link : #748, #748
0x0800017a : Logical Shift Right (immediate) : Rd6, Rm3, #28
0x0800017a : Sub immediate value to a register value : Rd5, #123
0x0800017a : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x0800017a : Bit clear performs a bitwise AND of a register value and the complement of a register value : Rm0, Rd7
0x0800017b : Branch : #450
0x0800017b : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x0800017b : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800017b : Load Register Byte (immediate) : Rt0, Rn6, #3
0x0800017c : Branch with Link and Exchange : Rm1
0x0800017d : Load Register Signed Halfword (register) : Rt5, Rn7, Rm2
0x0800017d : Load Register Halfword (immediate) : Rt2, Rn3, #20
0x0800017d : Add immediate value to a register value : Rd5, #107
0x0800017e : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x0800017e : Move immediate value to a register : Rd3, #70
0x0800017e : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x0800017e : Compare substracts a register value from a register value : Rm0, Rn4
0x0800017f : Address to Register adds an immediate value to the PC value : #66, Rd1
0x0800017f : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x0800017f : Logical Shift Right (immediate) : Rd4, Rm2, #8
0x0800017f : Compare immediate value from a register value : Rn0, #80
0x08000180 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000180 : Logical Shift Left (immediate) : Rd5, Rm0, #8
0x08000181 : Move immediate value to a register : Rd0, #64
0x08000181 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000181 : loads a word from memory and writes it to a register : #144, Rt0
0x08000182 : Store Register Byte (immediate) : Rt1, Rn5, #19
0x08000182 : Load Register Halfword (immediate) : Rt3, Rn3, #20
0x08000182 : Add immediate value to a register value : Rd7, #110
0x08000183 : Sub immediate value to a register value : Rd0, #113
0x08000183 : Branch : #966
0x08000183 : Bit clear performs a bitwise AND of a register value and the complement of a register value : Rm0, Rd7
0x08000183 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000184 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000184 : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x08000184 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000186 : Logical Shift Left (register)  : Rm0, Rd0
0x08000186 : Store Register Byte (immediate) : Rt0, Rn5, #19
0x08000187 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x08000187 : Sub immediate value to a register value : Rd7, #126
0x08000187 : Branch : #193
0x08000188 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000188 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000188 : Load Register Byte (immediate) : Rt0, Rn6, #3
0x08000188 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x08000189 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x08000189 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x08000189 : Load Register Byte (register) : Rt0, Rn7, Rm2
0x0800018a : Store Register Byte (immediate) : Rt0, Rn4, #3
0x0800018a : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x0800018a : Arithmetic Shift Right (immediate) : Rd6, Rm5, #28
0x0800018b : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800018b : Move immediate value to a register : Rd0, #64
0x0800018b : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800018c : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x0800018c : Subtract a register value : Rd6, Rn6, Rm4
0x0800018c : Load Register (immediate) : Rt1, Rn3, #19
0x0800018c : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800018d : Move copies a value from a register to the destination register : Rd5, Rm1
0x0800018d : Subtract with carry (register)  : Rm0, Rd2
0x0800018d : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800018d : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x0800018e : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x0800018e : Load Register (immediate) : Rt0, Rn2, #3
0x0800018e : Address to Register adds an immediate value to the PC value : #66, Rd1
0x0800018e : Arithmetic Shift Right (immediate) : Rd5, Rm5, #24
0x0800018f : Load Register Halfword (register) : Rt4, Rn6, Rm2
0x0800018f : Logical Shift Right (immediate) : Rd6, Rm3, #28
0x0800018f : Sub immediate value to a register value : Rd4, #120
0x08000190 : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x08000190 : Bit clear performs a bitwise AND of a register value and the complement of a register value : Rm0, Rd7
0x08000190 : Branch : #450
0x08000190 : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x08000191 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000191 : Load Register Byte (immediate) : Rt0, Rn6, #3
0x08000191 : Branch with Link and Exchange : Rm1
0x08000193 : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x08000193 : Add immediate value to a register value : Rd3, Rn7, Rm4
0x08000193 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x08000193 : Move immediate value to a register : Rd1, #67
0x08000194 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000194 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x08000194 : Move immediate value to a register : Rd0, #64
0x08000194 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000195 : loads a word from memory and writes it to a register : #144, Rt0
0x08000195 : Store Register Byte (immediate) : Rt1, Rn5, #19
0x08000196 : Load Register Halfword (immediate) : Rt3, Rn3, #20
0x08000196 : Add immediate value to a register value : Rd7, #110
0x08000196 : Add a register value : Rd1, Rn6, Rm0
0x08000196 : Store Register (immediate) : Rt6, Rn0, #15
0x08000197 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x08000197 : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x08000197 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000197 : Move immediate value to a register : Rd0, #64
0x08000198 : ADD (SP plus immediate) adds an immediate value to the SP value : #81, Rd0
0x08000198 : Address to Register adds an immediate value to the PC value : #68, Rd2
0x08000198 : Load Register Byte (immediate) : Rt5, Rn6, #11
0x08000198 : Pack Halfword : Rn4, #4, Rd7, #2, tb0, T0, Rn4
0x08000199 : SUB immediate value to a register value : Rd5, Rn7, Rm0
0x08000199 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000199 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800019a : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800019a : Move immediate value to a register : Rd0, #64
0x0800019a : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800019a : Store Register (immediate) : Rt4, Rn0, #11
0x0800019b : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800019b : Load Register (register) : Rt1, Rn6, Rm2
0x0800019b : Sub immediate value to a register value : Rd5, #122
0x0800019c : Logical Shift Right (immediate) : Rd6, Rm3, #28
0x0800019c : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800019c : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x0800019d : Logical Shift Right (immediate) : Rd5, Rm3, #24
0x0800019d : Sub immediate value to a register value : Rd2, #116
0x0800019d : Logical Shift Left (register)  : Rm0, Rd1
0x0800019e : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x0800019e : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x0800019e : Add immediate value to a register value : Rd2, Rn7, Rm4
0x0800019f : Store Register Byte (immediate) : Rt2, Rn5, #23
0x0800019f : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x0800019f : Logical Shift Left (immediate) : Rd6, Rm1, #28
0x0800019f : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080001a0 : Move immediate value to a register : Rd0, #64
0x080001a0 : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x080001a0 : Move immediate value to a register : Rd2, #68
0x080001a0 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x080001a1 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x080001a1 : Add immediate value to a register value : Rd0, Rn7, Rm0
0x080001a1 : Store Register Byte (immediate) : Rt0, Rn4, #3
0x080001a1 : Store Register (immediate) : Rt3, Rn0, #7
0x080001a2 : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x080001a2 : Load Register (register) : Rt0, Rn6, Rm2
0x080001a2 : Load Register SP relative (immediate) : #58, Rt5
0x080001a3 : Store Register Byte (immediate) : Rt3, Rn5, #23
0x080001a3 : loads a word from memory and writes it to a register : #147, Rt1
0x080001a3 : Move immediate value to a register : Rd7, #78
0x080001a3 : Add immediate value to a register value : Rd4, #105
0x080001a4 : Bit clear performs a bitwise AND of a register value and the complement of a register value : Rm0, Rd6
0x080001a4 : Logical Shift Right (immediate) : Rd2, Rm3, #20
0x080001a4 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080001a5 : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x080001a5 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080001a5 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x080001a6 : Logical Shift Right (immediate) : Rd0, Rm3, #16
0x080001a6 : Add immediate value to a register value : Rd0, #96
0x080001a6 : Store Register Byte (immediate) : Rt1, Rn4, #3
0x080001a7 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn3
0x080001a7 : Branch with Link and Exchange : Rm1
0x080001a7 : Add immediate value to a register value : Rd0, Rn7, Rm0
0x080001a7 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080001a8 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080001a8 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080001a8 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080001a8 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080001a9 : Move immediate value to a register : Rd0, #64
0x080001a9 : Load Register Halfword (immediate) : Rt1, Rn2, #0
0x080001a9 : Move immediate value to a register : Rd2, #68
0x080001a9 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x080001aa : Move immediate value to a register : Rd2, #68
0x080001aa : Compare immediate value from a register value : Rn4, #89
0x080001aa : Logical Shift Left (immediate) : Rd5, Rm0, #8
0x080001ab : Logical Shift Right (immediate) : Rd6, Rm2, #12
0x080001ab : Logical Shift Left (register)  : Rm0, Rd1
0x080001ab : Logical Shift Right (immediate) : Rd2, Rm3, #20
0x080001ac : Add immediate value to a register value : Rd4, #104
0x080001ac : Logical Shift Left (register)  : Rm0, Rd1
0x080001ac : Logical Shift Left (immediate) : Rd6, Rm0, #12
0x080001ac : Branch : #1224
0x080001ad : Store Register SP relative (immediate) : #32, Rt0
0x080001ad : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080001ad : Load Register Byte (immediate) : Rt2, Rn6, #7
0x080001ad : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x080001ae : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x080001ae : ADD (SP plus immediate) adds an immediate value to the SP value : #80, Rd0
0x080001ae : Address to Register adds an immediate value to the PC value : #64, Rd0
0x080001ae : Load Register Halfword (immediate) : Rt5, Rn2, #8
0x080001af : Compare immediate value from a register value : Rn2, #84
0x080001af : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x080001af : Move immediate value to a register : Rd2, #69
0x080001af : loads a word from memory and writes it to a register : #153, Rt4
0x080001b0 : Add immediate value to a register value : Rd2, #100
0x080001b0 : Add immediate value to a register value : Rd4, #105
0x080001b0 : Logical Shift Left (immediate) : Rd6, Rm0, #12
0x080001b1 : Logical Shift Right (immediate) : Rd2, Rm3, #20
0x080001b1 : Add immediate value to a register value : Rd0, #96
0x080001b1 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x080001b1 : Arithmetic Shift Right (immediate) : Rd6, Rm4, #12
0x080001b2 : loads a word from memory and writes it to a register : #152, Rt4
0x080001b2 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080001b2 : Logical Shift Left (immediate) : Rd1, Rm1, #16
0x080001b2 : Branch : #192
0x080001b3 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080001b3 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080001b3 : Load Register Byte (immediate) : Rt0, Rn6, #3
0x080001b3 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080001b4 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x080001b4 : Store Register Byte (immediate) : Rt0, Rn4, #3
0x080001b4 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x080001b4 : Store Register (immediate) : Rt6, Rn1, #31
0x080001b5 : Load Register SP relative (immediate) : #56, Rt4
0x080001b5 : Branch : #1740
0x080001b5 : Load Register SP relative (immediate) : #51, Rt1
0x080001b6 : Sub immediate value to a register value : Rd7, #127
0x080001b6 : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x080001b6 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080001b7 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080001b7 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080001b7 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x080001b7 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080001b8 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x080001b8 : Move immediate value to a register : Rd0, #64
0x080001b8 : Store Register Halfword (immediate) : Rt1, Rn0, #0
0x080001b9 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x080001b9 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x080001b9 : Move immediate value to a register : Rd0, #64
0x080001b9 : Store Register (immediate) : Rt1, Rn0, #3
0x080001ba : Store Register Halfword (immediate) : Rt4, Rn0, #8
0x080001ba : Load Register (register) : Rt0, Rn6, Rm2
0x080001ba : Load Register SP relative (immediate) : #58, Rt5
0x080001bb : Store Register Byte (immediate) : Rt3, Rn5, #23
0x080001bb : Sub immediate value to a register value : Rd1, #115
0x080001bb : Branch : #1998
0x080001bb : Move immediate value to a register : Rd3, #71
0x080001bc : Load Register Halfword (immediate) : Rt4, Rn3, #24
0x080001bc : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x080001bc : Load Register Halfword (register) : Rt6, Rn6, Rm6
0x080001bd : Load Register (immediate) : Rt1, Rn3, #19
0x080001bd : Arithmetic Shift Right (immediate) : Rd3, Rm5, #20
0x080001bd : Load Register Signed Byte (register) : Rt5, Rn5, Rm2
0x080001bd : Address to Register adds an immediate value to the PC value : #66, Rd1
0x080001be : Store Register Halfword (immediate) : Rt2, Rn1, #20
0x080001be : Load Register Halfword (immediate) : Rt4, Rn2, #8
0x080001be : Compare immediate value from a register value : Rn0, #80
0x080001be : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x080001bf : Move immediate value to a register : Rd2, #69
0x080001bf : loads a word from memory and writes it to a register : #153, Rt4
0x080001bf : Add immediate value to a register value : Rd2, #100
0x080001bf : Store Register SP relative (immediate) : #41, Rt4
0x080001c0 : Store Register Halfword : Rt6, Rn4, Rm6
0x080001c0 : Load Register Halfword (immediate) : Rt2, Rn2, #4
0x080001c0 : Move immediate value to a register : Rd5, #74
0x080001c0 : Load Register (immediate) : Rt1, Rn2, #3
0x080001c1 : Address to Register adds an immediate value to the PC value : #68, Rd2
0x080001c1 : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x080001c1 : Subtract a register value : Rd4, Rn6, Rm0
0x080001c1 : Logical Shift Left (register)  : Rm0, Rd0
0x080001c2 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080001c2 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x080001c2 : Load Register SP relative (immediate) : #58, Rt5
0x080001c3 : Store Register Byte (immediate) : Rt2, Rn5, #23
0x080001c3 : Load Register Halfword (immediate) : Rt3, Rn2, #4
0x080001c3 : Move immediate value to a register : Rd7, #78
0x080001c3 : loads a word from memory and writes it to a register : #145, Rt0
0x080001c4 : Move immediate value to a register : Rd2, #68
0x080001c4 : Store Register (immediate) : Rt1, Rn1, #19
0x080001c4 : Store Register SP relative (immediate) : #36, Rt2
0x080001c4 : Store Register SP relative (immediate) : #44, Rt6
0x080001c5 : Load Register (register) : Rt2, Rn6, Rm6
0x080001c5 : loads a word from memory and writes it to a register : #146, Rt1
0x080001c5 : Move immediate value to a register : Rd5, #75
0x080001c5 : Branch with Link : #233, #233
0x080001c6 : Load Register Byte (immediate) : Rt2, Rn7, #23
0x080001c7 : Load Register Byte (immediate) : Rt6, Rn7, #31
0x080001c7 : Add immediate value to a register value : Rd3, Rn7, Rm4
0x080001c7 : Store Register Byte (immediate) : Rt7, Rn5, #31
0x080001c7 : Store Register (immediate) : Rt3, Rn0, #7
0x080001c8 : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x080001c8 : Branch with Link : #748, #748
0x080001c8 : SUB immediate value to a register value : Rd6, Rn7, Rm4
0x080001c8 : Load Register Byte (immediate) : Rt3, Rn7, #23
0x080001c9 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080001c9 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x080001c9 : Store Register (immediate) : Rt0, Rn0, #3
0x080001c9 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080001ca : Store Register (immediate) : Rt4, Rn1, #27
0x080001ca : Load Register SP relative (immediate) : #48, Rt0
0x080001ca : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x080001ca : Add a register value : Rd3, Rn6, Rm4
0x080001cb : Move immediate value to a register : Rd0, #64
0x080001cb : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x080001cb : Store Register (immediate) : Rt4, Rn0, #11
0x080001cb : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080001cc : Branch with Link : #748, #748
0x080001cc : Sub immediate value to a register value : Rd7, #126
0x080001cc : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x080001cd : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x080001cd : Branch : #192
0x080001cd : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080001ce : Sub immediate value to a register value : Rd6, #124
0x080001ce : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x080001ce : Load Register Byte (immediate) : Rt4, Rn7, #27
0x080001cf : Load Register Byte (immediate) : Rt6, Rn7, #31
0x080001d0 : Load Register SP relative (immediate) : #63, Rt7
0x080001d0 : Load Register Signed Byte (register) : Rt4, Rn5, Rm2
0x080001d0 : Load Register (register) : Rt3, Rn6, Rm6
0x080001d0 : Add immediate value to a register value : Rd5, #106
0x080001d1 : Store Register (immediate) : Rt6, Rn0, #15
0x080001d1 : Load Register Halfword (immediate) : Rt2, Rn3, #20
0x080001d1 : Add immediate value to a register value : Rd6, #108
0x080001d2 : Store Register Halfword (immediate) : Rt6, Rn0, #12
0x080001d2 : Logical Shift Right (immediate) : Rd3, Rm3, #20
0x080001d2 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080001d3 : Move immediate value to a register : Rd0, #65
0x080001d3 : Load Register (immediate) : Rt1, Rn2, #3
0x080001d3 : Address to Register adds an immediate value to the PC value : #68, Rd2
0x080001d3 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn6
0x080001d4 : Subtract a register value : Rd4, Rn6, Rm0
0x080001d4 : Load Register Byte (immediate) : Rt5, Rn7, #27
0x080001d5 : SUB immediate value to a register value : Rd7, Rn7, Rm4
0x080001d5 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080001d5 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080001d5 : Move immediate value to a register : Rd0, #64
0x080001d6 : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x080001d6 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x080001d6 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x080001d6 : Store Register Byte (immediate) : Rt0, Rn4, #3
0x080001d7 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x080001d7 : Add immediate value to a register value : Rd7, #110
0x080001d7 : Bit clear performs a bitwise AND of a register value and the complement of a register value : Rm0, Rd6
0x080001d8 : Logical Shift Right (immediate) : Rd3, Rm3, #20
0x080001d8 : Branch : #1224
0x080001d8 : Store Register SP relative (immediate) : #33, Rt0
0x080001d8 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080001d9 : Load Register Byte (immediate) : Rt2, Rn6, #7
0x080001d9 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x080001d9 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x080001d9 : loads a word from memory and writes it to a register : #144, Rt0
0x080001da : Move immediate value to a register : Rd0, #64
0x080001da : Store Register Halfword (immediate) : Rt1, Rn1, #16
0x080001da : Arithmetic Shift Right (immediate) : Rd4, Rm4, #8
0x080001da : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x080001db : Move immediate value to a register : Rd1, #66
0x080001db : Add immediate value to a register value : Rd0, #97
0x080001db : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn2
0x080001db : Add immediate value to a register value : Rd3, #102
0x080001dc : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn4
0x080001dc : Logical Shift Left (immediate) : Rd6, Rm0, #12
0x080001dc : Logical Shift Right (immediate) : Rd1, Rm3, #16
0x080001dd : Logical Shift Left (register)  : Rm0, Rd1
0x080001dd : Sub immediate value to a register value : Rd5, #122
0x080001dd : Logical Shift Right (immediate) : Rd6, Rm3, #28
0x080001de : Branch : #192
0x080001de : Store Register Halfword (immediate) : Rt1, Rn0, #0
0x080001de : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080001de : Load Register Byte (immediate) : Rt0, Rn6, #3
0x080001df : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080001df : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x080001df : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x080001e0 : Load Register (immediate) : Rt6, Rn2, #15
0x080001e0 : ADD (SP plus immediate) adds an immediate value to the SP value : #88, Rd4
0x080001e0 : Branch : #1741
0x080001e0 : Load Register SP relative (immediate) : #53, Rt2
0x080001e1 : Sub immediate value to a register value : Rd7, #127
0x080001e1 : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x080001e2 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x080001e2 : Sub immediate value to a register value : Rd7, #127
0x080001e2 : Store Register Halfword (immediate) : Rt1, Rn0, #0
0x080001e3 : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x080001e3 : Load Register (immediate) : Rt0, Rn2, #3
0x080001e3 : Address to Register adds an immediate value to the PC value : #64, Rd0
0x080001e3 : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x080001e4 : Subtract a register value : Rd4, Rn6, Rm0
0x080001e4 : Store Register (immediate) : Rt0, Rn0, #3
0x080001e4 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x080001e4 : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x080001e5 : Add a register value : Rd0, Rn6, Rm0
0x080001e5 : Store Register (immediate) : Rt0, Rn0, #3
0x080001e5 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x080001e6 : Load Register (register) : Rt0, Rn6, Rm2
0x080001e6 : Load Register SP relative (immediate) : #58, Rt5
0x080001e6 : Store Register Byte (immediate) : Rt3, Rn5, #23
0x080001e6 : Sub immediate value to a register value : Rd1, #115
0x080001e7 : Branch : #1998
0x080001e7 : Move immediate value to a register : Rd3, #71
0x080001e7 : Load Register Halfword (immediate) : Rt4, Rn3, #24
0x080001e8 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x080001e8 : Load Register Halfword (register) : Rt6, Rn6, Rm6
0x080001e8 : Load Register (immediate) : Rt1, Rn3, #19
0x080001e8 : Arithmetic Shift Right (immediate) : Rd3, Rm5, #20
0x080001e9 : Load Register Signed Byte (register) : Rt5, Rn5, Rm2
0x080001e9 : Subtract with carry (register)  : Rm0, Rd2
0x080001e9 : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x080001e9 : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x080001ea : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x080001ea : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x080001ea : Move immediate value to a register : Rd1, #66
0x080001ea : Add immediate value to a register value : Rd0, #97
0x080001eb : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn2
0x080001eb : Store Register Byte (immediate) : Rt6, Rn4, #15
0x080001eb : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn4
0x080001eb : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x080001ec : Add immediate value to a register value : Rd1, Rn7, Rm0
0x080001ec : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x080001ec : Move immediate value to a register : Rd1, #67
0x080001ec : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x080001ed : Compare substracts a register value from a register value : Rm0, Rn4
0x080001ed : Subtract with carry (register)  : Rm0, Rd2
0x080001ed : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080001ee : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x080001ee : Load Register Byte (immediate) : Rt2, Rn7, #23
0x080001ee : Conditional branch : cond:7, #42, cond:7
0x080001ee : SUB immediate value to a register value : Rd6, Rn7, Rm4
0x080001ef : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080001ef : Move immediate value to a register : Rd1, #67
0x080001ef : Add a register value : Rd1, Rn6, Rm0
0x080001ef : Store Register (immediate) : Rt4, Rn0, #11
0x080001f0 : Store Register (immediate) : Rt3, Rn0, #7
0x080001f0 : Store Register Halfword (immediate) : Rt4, Rn1, #24
0x080001f0 : Move copies a value from a register to the destination register : Rd4, Rm1
0x080001f0 : Add a register value : Rd0, Rn6, Rm0
0x080001f1 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080001f1 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080001f1 : Branch : #192
0x080001f1 : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x080001f2 : Load Register Byte (immediate) : Rt0, Rn6, #3
0x080001f2 : Add immediate value to a register value : Rd3, Rn7, Rm4
0x080001f2 : Store Register Byte (immediate) : Rt7, Rn5, #31
0x080001f3 : Store Register (immediate) : Rt3, Rn0, #7
0x080001f3 : Store Register Halfword (immediate) : Rt6, Rn1, #28
0x080001f3 : Branch with Link : #748, #748
0x080001f4 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x080001f4 : Sub immediate value to a register value : Rd7, #127
0x080001f4 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x080001f4 : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x080001f5 : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x080001f5 : Logical Shift Left (register)  : Rm0, Rd0
0x080001f5 : Compare immediate value from a register value : Rn7, #94
0x080001f6 : Store Register (immediate) : Rt5, Rn0, #11
0x080001f6 : Load Register Halfword (immediate) : Rt7, Rn2, #12
0x080001f6 : Branch with Link : #748, #748
0x080001f7 : Sub immediate value to a register value : Rd7, #126
0x080001f7 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x080001f7 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x080001f8 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x080001f8 : Load Register SP relative (immediate) : #63, Rt7
0x080001f8 : Load Register Byte (immediate) : Rt6, Rn7, #31
0x080001f9 : Add a register value : Rd3, Rn6, Rm4
0x080001f9 : Store Register (immediate) : Rt7, Rn1, #31
0x080001f9 : Store Register calculates and address from a base register, stores a word : Rt3, Rn4, Rm6
0x080001f9 : Move copies a value from a register to the destination register : Rd4, Rm1
0x080001fa : Branch with Link : #490, #490
0x080001fa : Sub immediate value to a register value : Rd7, #127
0x080001fb : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x080001fb : Sub immediate value to a register value : Rd6, #125
0x080001fc : Load Register Halfword (immediate) : Rt7, Rn3, #28
0x080001fc : Load Register Byte (immediate) : Rt4, Rn7, #27
0x080001fd : SUB immediate value to a register value : Rd6, Rn7, Rm4
0x080001fd : Load Register Byte (immediate) : Rt3, Rn7, #23
0x080001fd : Store Register Byte (immediate) : Rt3, Rn4, #7
0x080001fd : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn7
0x080001fe : Add immediate value to a register value : Rd7, #110
0x080001fe : Store Register Halfword (immediate) : Rt6, Rn0, #12
0x080001fe : Logical Shift Right (immediate) : Rd3, Rm3, #20
0x080001ff : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080001ff : Move immediate value to a register : Rd0, #65
0x080001ff : Sub immediate value to a register value : Rd0, #113
0x080001ff : Branch : #708
0x08000200 : Move immediate value to a register : Rd3, #71
0x08000200 : Load Register Halfword (immediate) : Rt4, Rn3, #24
0x08000200 : Store Register Halfword : Rt4, Rn4, Rm2
0x08000200 : loads a word from memory and writes it to a register : #145, Rt0
0x08000201 : Store Register Byte : Rt1, Rn5, Rm2
0x08000201 : Load Register SP relative (immediate) : #63, Rt7
0x08000202 : Load Register Byte (immediate) : Rt6, Rn7, #31
0x08000202 : Logical Shift Right (immediate) : Rd3, Rm2, #4
0x08000202 : Move immediate value to a register : Rd7, #79
0x08000202 : Store Register Halfword (immediate) : Rt1, Rn0, #0
0x08000203 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x08000203 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000203 : Move immediate value to a register : Rd0, #64
0x08000203 : Compare immediate value from a register value : Rn0, #81
0x08000204 : Address to Register adds an immediate value to the PC value : #68, Rd2
0x08000204 : Arithmetic Shift Right (immediate) : Rd5, Rm4, #8
0x08000204 : loads a word from memory and writes it to a register : #148, Rt2
0x08000204 : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x08000205 :  : Rm1, Rd1
0x08000205 : Store Register (immediate) : Rt2, Rn0, #7
0x08000205 : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x08000205 : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x08000206 : Add a register value : Rd0, Rn6, Rm0
0x08000206 : Logical Shift Left (register)  : Rm0, Rd0
0x08000206 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x08000207 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x08000207 : Sub immediate value to a register value : Rd5, #122
0x08000207 : Conditional branch : cond:7, #42, cond:7
0x08000207 : Logical Shift Right (immediate) : Rd6, Rm3, #28
0x08000208 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000208 : Move immediate value to a register : Rd0, #65
0x08000208 : Load Register Signed Halfword (register) : Rt7, Rn7, Rm6
0x08000209 : Load Register Byte (immediate) : Rt4, Rn7, #27
0x08000209 : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x08000209 : Arithmetic Shift Right (immediate) : Rd7, Rm5, #28
0x08000209 : Logical Shift Left (register)  : Rm0, Rd0
0x0800020a : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800020a : Branch with Link : #232, #232
0x0800020a : Load Register SP relative (immediate) : #62, Rt7
0x0800020a : Load Register Byte (immediate) : Rt2, Rn7, #23
0x0800020b : Add a register value : Rd3, Rn6, Rm4
0x0800020b : Store Register (immediate) : Rt7, Rn1, #31
0x0800020b : Move immediate value to a register : Rd1, #67
0x0800020b : Store Register Halfword (immediate) : Rt4, Rn1, #24
0x0800020c : Branch : #708
0x0800020c : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800020c : Sub immediate value to a register value : Rd6, #124
0x0800020d : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x0800020d : Logical Shift Left (register)  : Rm0, Rd0
0x0800020d : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x0800020d : Branch with Link : #232, #232
0x0800020e : SUB immediate value to a register value : Rd6, Rn7, Rm4
0x0800020e : Load Register Byte (immediate) : Rt2, Rn7, #23
0x0800020e : Subtract with carry (register)  : Rm0, Rd3
0x0800020e : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x0800020f : Move immediate value to a register : Rd4, #72
0x0800020f : Store Register SP relative (immediate) : #32, Rt0
0x0800020f : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x0800020f : Logical Shift Right (immediate) : Rd2, Rm2, #4
0x08000210 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x08000210 : Logical Shift Left (register)  : Rm0, Rd0
0x08000211 : Move immediate value to a register : Rd4, #72
0x08000211 : Store Register SP relative (immediate) : #32, Rt0
0x08000211 : Branch : #708
0x08000211 : Load Register Halfword (immediate) : Rt2, Rn2, #4
0x08000212 : Load Register Signed Halfword (register) : Rt4, Rn7, Rm2
0x08000212 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000212 : Store Register Halfword (immediate) : Rt3, Rn1, #20
0x08000212 : Arithmetic Shift Right (immediate) : Rd7, Rm5, #28
0x08000213 : Load Register Byte (immediate) : Rt0, Rn6, #3
0x08000213 : Branch : #450
0x08000213 : Branch : #1999
0x08000213 : Load Register SP relative (immediate) : #60, Rt6
0x08000214 : Load Register Signed Halfword (register) : Rt4, Rn7, Rm2
0x08000214 : Load Register Byte (immediate) : Rt3, Rn6, #7
0x08000214 : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x08000214 : Arithmetic Shift Right (immediate) : Rd7, Rm5, #28
0x08000215 : Logical Shift Left (register)  : Rm0, Rd0
0x08000215 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000215 : Branch with Link : #232, #232
0x08000215 : Sub immediate value to a register value : Rd7, #126
0x08000216 : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x08000216 : Move immediate value to a register : Rd0, #64
0x08000216 : Store Register Halfword (immediate) : Rt1, Rn0, #0
0x08000217 : Store Register (immediate) : Rt4, Rn0, #11
0x08000217 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000217 : Load Register Signed Byte (register) : Rt4, Rn5, Rm2
0x08000217 : Load Register (register) : Rt1, Rn6, Rm2
0x08000218 : Address to Register adds an immediate value to the PC value : #74, Rd5
0x08000218 : Store Register SP relative (immediate) : #43, Rt5
0x08000218 : loads a word from memory and writes it to a register : #148, Rt2
0x08000218 : Compare immediate value from a register value : Rn1, #82
0x08000219 : Branch : #1225
0x08000219 : Store Register SP relative (immediate) : #37, Rt2
0x08000219 : Load Register Signed Halfword (register) : Rt4, Rn7, Rm2
0x08000219 : Load Register Byte (immediate) : Rt2, Rn6, #7
0x0800021a : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x0800021a : Arithmetic Shift Right (immediate) : Rd7, Rm5, #28
0x0800021a : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x0800021a : Subtract with carry (register)  : Rm0, Rd2
0x0800021b : Branch with Link : #490, #490
0x0800021b : Load Register Signed Halfword (register) : Rt6, Rn7, Rm6
0x0800021b : Load Register Byte (immediate) : Rt2, Rn7, #23
0x0800021b : Store Register (immediate) : Rt3, Rn1, #23
0x0800021c : Store Register SP relative (immediate) : #47, Rt7
0x0800021c : Add immediate value to a register value : Rd6, #108
0x0800021d : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn5
0x0800021d : Subtract a register value : Rd6, Rn6, Rm4
0x0800021d : Load Register (immediate) : Rt1, Rn3, #19
0x0800021e : Move copies a value from a register to the destination register : Rd5, Rm1
0x0800021e : ADD (SP plus immediate) adds an immediate value to the SP value : #90, Rd5
0x0800021f : Load Register (immediate) : Rt6, Rn2, #15
0x0800021f : Load Register Halfword (immediate) : Rt3, Rn3, #20
0x0800021f : Add immediate value to a register value : Rd6, #109
0x0800021f : Load Register Halfword (immediate) : Rt1, Rn2, #0
0x08000220 : Move immediate value to a register : Rd3, #70
0x08000220 : Compare immediate value from a register value : Rn0, #81
0x08000220 : Address to Register adds an immediate value to the PC value : #68, Rd2
0x08000220 : Store Register Halfword : Rt5, Rn4, Rm2
0x08000221 : loads a word from memory and writes it to a register : #148, Rt2
0x08000221 : Store Register Halfword (immediate) : Rt2, Rn1, #20
0x08000221 : Arithmetic Shift Right (immediate) : Rd1, Rm5, #16
0x08000221 : loads a word from memory and writes it to a register : #144, Rt0
0x08000222 : Move immediate value to a register : Rd1, #66
0x08000222 : Arithmetic Shift Right (immediate) : Rd1, Rm5, #16
0x08000222 : Store Register Halfword : Rt4, Rn4, Rm2
0x08000222 : Add immediate value to a register value : Rd1, #98
0x08000223 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn5
0x08000223 : Address to Register adds an immediate value to the PC value : #70, Rd3
0x08000223 : Load Register Halfword (immediate) : Rt0, Rn3, #16
0x08000224 : Load Register (immediate) : Rt5, Rn3, #27
0x08000224 : Load Register (immediate) : Rt3, Rn2, #7
0x08000224 : Address to Register adds an immediate value to the PC value : #77, Rd6
0x08000225 : Load Register Signed Byte (register) : Rt5, Rn5, Rm2
0x08000225 : Load Register Halfword (register) : Rt4, Rn6, Rm2
0x08000225 : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x08000225 : Arithmetic Shift Right (immediate) : Rd3, Rm5, #20
0x08000226 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000226 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x08000227 : Load Register Halfword (immediate) : Rt0, Rn3, #16
0x08000227 : Add immediate value to a register value : Rd0, #96
0x08000227 : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x08000227 : Move immediate value to a register : Rd3, #70
0x08000228 : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x08000228 : Compare substracts a register value from a register value : Rm0, Rn4
0x08000228 :  : Rm1, Rd0
0x08000229 : Load Register Halfword (immediate) : Rt2, Rn3, #20
0x08000229 : Add immediate value to a register value : Rd4, #104
0x08000229 : Load Register Halfword (immediate) : Rt1, Rn2, #0
0x08000229 : Move immediate value to a register : Rd3, #70
0x0800022a : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x0800022a : Move immediate value to a register : Rd2, #68
0x0800022a : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x0800022a : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x0800022b : Load Register Halfword (immediate) : Rt0, Rn3, #16
0x0800022b : Add immediate value to a register value : Rd0, #96
0x0800022b : ADD (SP plus immediate) adds an immediate value to the SP value : #81, Rd0
0x0800022b : Address to Register adds an immediate value to the PC value : #70, Rd3
0x0800022c : Subtract a register value : Rd5, Rn6, Rm0
0x0800022c : Load Register (immediate) : Rt4, Rn2, #11
0x0800022c : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn1
0x0800022c : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x0800022d : Sub immediate value to a register value : Rd4, #120
0x0800022d : loads a word from memory and writes it to a register : #158, Rt7
0x0800022d : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x0800022e :  : Rm1, Rd1
0x0800022e : Branch : #450
0x0800022e : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x0800022e : Load Register Halfword (immediate) : Rt4, Rn3, #24
0x0800022f : Sub immediate value to a register value : Rd0, #112
0x0800022f : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x0800022f : Move immediate value to a register : Rd3, #71
0x0800022f : Branch : #193
0x08000230 : Store Register Halfword (immediate) : Rt4, Rn0, #8
0x08000230 : Sub immediate value to a register value : Rd6, #124
0x08000230 : loads a word from memory and writes it to a register : #159, Rt7
0x08000231 : Load Register (immediate) : Rt6, Rn3, #31
0x08000231 : Branch : #1483
0x08000232 : Store Register SP relative (immediate) : #45, Rt6
0x08000232 : Load Register Halfword (immediate) : Rt4, Rn3, #24
0x08000232 : Sub immediate value to a register value : Rd1, #114
0x08000232 : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x08000233 : Move immediate value to a register : Rd3, #71
0x08000233 : Branch : #193
0x08000233 : Store Register Halfword (immediate) : Rt4, Rn0, #8
0x08000233 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000234 : Sub immediate value to a register value : Rd0, #112
0x08000234 : Store Register (immediate) : Rt1, Rn0, #3
0x08000234 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000234 : Store Register SP relative (immediate) : #44, Rt6
0x08000235 : Load Register (register) : Rt0, Rn6, Rm2
0x08000235 : Logical Shift Right (immediate) : Rd2, Rm2, #4
0x08000235 : Move immediate value to a register : Rd5, #75
0x08000235 : Store Register (immediate) : Rt1, Rn0, #3
0x08000236 : Store Register Halfword (immediate) : Rt4, Rn0, #8
0x08000236 : Move copies a value from a register to the destination register : Rd4, Rm1
0x08000236 : Add a register value : Rd0, Rn6, Rm0
0x08000236 :  : Rm1, Rd0
0x08000237 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000237 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000237 : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x08000237 : Move immediate value to a register : Rd0, #64
0x08000238 : Store Register Halfword (immediate) : Rt2, Rn0, #4
0x08000238 : loads a word from memory and writes it to a register : #144, Rt0
0x08000239 : Branch : #233, #233
0x08000239 : Load Register (immediate) : Rt5, Rn3, #27
0x08000239 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn1
0x0800023a : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x0800023a : Load Register SP relative (immediate) : #56, Rt4
0x0800023a : Store Register Byte (immediate) : Rt0, Rn4, #3
0x0800023a : Logical Shift Right (immediate) : Rd3, Rm2, #4
0x0800023b : Move immediate value to a register : Rd7, #78
0x0800023b : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x0800023b : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x0800023d : loads a word from memory and writes it to a register : #157, Rt6
0x0800023d : Load Register Byte (immediate) : Rt0, Rn7, #19
0x0800023e : Logical Shift Right (immediate) : Rd3, Rm3, #20
0x0800023e : Add immediate value to a register value : Rd7, #111
0x0800023e : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x0800023e : Logical Shift Left (immediate) : Rd6, Rm0, #12
0x0800023f : Branch : #192
0x0800023f : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800023f : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800023f : Load Register Byte (immediate) : Rt0, Rn6, #3
0x08000240 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x08000240 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x08000240 : Store Multiple stores multiple registers to consecutive memory locations using an address from a base register : Rn0
0x08000241 : Load Register SP relative (immediate) : #56, Rt4
0x08000241 : Store Register Byte (immediate) : Rt0, Rn4, #3
0x08000241 : Load Register SP relative (immediate) : #51, Rt1
0x08000241 : Store Register (immediate) : Rt6, Rn1, #31
0x08000242 : Logical Shift Right (immediate) : Rd3, Rm2, #4
0x08000242 : Move immediate value to a register : Rd6, #76
0x08000242 : Move immediate value to a register : Rd0, #65
0x08000242 : Store Register Halfword (immediate) : Rt4, Rn0, #8
0x08000243 : loads a word from memory and writes it to a register : #144, Rt0
0x08000243 : Branch with Link : #233, #233
0x08000244 : Load Register (immediate) : Rt6, Rn3, #31
0x08000244 : Load Register Halfword (immediate) : Rt3, Rn3, #20
0x08000244 : Add immediate value to a register value : Rd6, #109
0x08000244 : Add a register value : Rd1, Rn6, Rm0
0x08000245 : Store Register (immediate) : Rt6, Rn0, #15
0x08000245 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x08000245 : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x08000245 : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x08000246 : Logical Shift Left (register)  : Rm0, Rd0
0x08000246 : Move immediate value to a register : Rd1, #66
0x08000246 : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x08000246 : Branch : #708
0x08000247 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000247 : Load Register (immediate) : Rt7, Rn3, #31
0x08000248 : Add immediate value to a register value : Rd5, #107
0x08000248 : Store Register Byte (immediate) : Rt6, Rn4, #15
0x08000248 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn5
0x08000249 : Load Register Byte (register) : Rt1, Rn7, Rm2
0x08000249 : Logical Shift Right (immediate) : Rd5, Rm3, #24
0x0800024a : Sub immediate value to a register value : Rd3, #118
0x0800024a : Branch : #193
0x0800024a : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800024a : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800024b : Load Register Byte (immediate) : Rt0, Rn6, #3
0x0800024b : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x0800024b : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x0800024c : Store Register (immediate) : Rt0, Rn0, #3
0x0800024c : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800024c : Branch : #1740
0x0800024d : Load Register SP relative (immediate) : #48, Rt0
0x0800024d : SUB immediate value to a register value : Rd7, Rn7, Rm4
0x0800024d : Load Register Byte (immediate) : Rt7, Rn7, #31
0x0800024e : Branch : #451
0x0800024e : Store Register Halfword (immediate) : Rt7, Rn1, #28
0x0800024e : Load Register SP relative (immediate) : #63, Rt7
0x0800024f : Load Register Byte (immediate) : Rt7, Rn7, #31
0x0800024f : Compare immediate value from a register value : Rn1, #83
0x0800024f : Address to Register adds an immediate value to the PC value : #79, Rd7
0x0800024f : Store Register (immediate) : Rt5, Rn0, #11
0x08000250 : Load Register Halfword (immediate) : Rt4, Rn2, #8
0x08000250 : Branch : #1740
0x08000250 : Load Register SP relative (immediate) : #49, Rt0
0x08000251 : SUB immediate value to a register value : Rd7, Rn7, Rm4
0x08000251 : Load Register Byte (immediate) : Rt7, Rn7, #31
0x08000251 : Branch : #451
0x08000251 : Store Register Halfword (immediate) : Rt7, Rn1, #28
0x08000252 : Load Register SP relative (immediate) : #63, Rt7
0x08000252 : Load Register Byte (immediate) : Rt7, Rn7, #31
0x08000253 : Load Register Byte (immediate) : Rt5, Rn7, #27
0x08000253 : Load Register Signed Halfword (register) : Rt7, Rn7, Rm6
0x08000253 : Sub immediate value to a register value : Rd1, #114
0x08000254 : Branch : #1483
0x08000254 : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x08000254 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000254 : Store Register calculates and address from a base register, stores a word : Rt0, Rn4, Rm2
0x08000255 : Logical Shift Left (register)  : Rm0, Rd1
0x08000255 : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x08000255 : Arithmetic Shift Right (immediate) : Rd0, Rm5, #16
0x08000256 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000256 : Branch : #192
0x08000256 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000256 : Load Register Byte (immediate) : Rt4, Rn7, #27
0x08000257 : Load Register Signed Halfword (register) : Rt7, Rn7, Rm6
0x08000257 : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x08000257 : Compare substract register value from register value : Rn1, Rm3
0x08000258 : Move immediate value to a register : Rd1, #66
0x08000258 : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x08000258 : Store Register Halfword : Rt4, Rn4, Rm2
0x08000258 : loads a word from memory and writes it to a register : #144, Rt0
0x08000259 : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x08000259 : Arithmetic Shift Right (immediate) : Rd1, Rm5, #16
0x08000259 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800025a : Logical Shift Left (register)  : Rm0, Rd0
0x0800025a : Move immediate value to a register : Rd4, #72
0x0800025a : Store Register SP relative (immediate) : #32, Rt0
0x0800025b : Store Register Byte (immediate) : Rt4, Rn4, #11
0x0800025b : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn1
0x0800025b : Load Register Signed Byte (register) : Rt6, Rn5, Rm6
0x0800025b : Load Register Byte (register) : Rt1, Rn7, Rm2
0x0800025c : Store Register SP relative (immediate) : #42, Rt5
0x0800025c : Store Register Byte : Rt3, Rn5, Rm6
0x0800025c : Compare immediate value from a register value : Rn1, #82
0x0800025c : Address to Register adds an immediate value to the PC value : #74, Rd5
0x0800025d : Store Register Byte (immediate) : Rt5, Rn4, #11
0x0800025d : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn2
0x0800025d : Store Register Byte (immediate) : Rt6, Rn5, #31
0x0800025e : Address to Register adds an immediate value to the PC value : #78, Rd7
0x0800025e : Load Register SP relative (immediate) : #59, Rt5
0x0800025e : Logical Shift Right (immediate) : Rd4, Rm2, #8
0x0800025e : Compare immediate value from a register value : Rn1, #83
0x0800025f : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x0800025f : Compare substracts a register value from a register value : Rm0, Rn5
0x0800025f : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800025f : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000260 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000261 : Sub immediate value to a register value : Rd0, #112
0x08000261 : Branch : #192
0x08000261 : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x08000261 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000262 : Move immediate value to a register : Rd0, #64
0x08000262 : Store Register Halfword (immediate) : Rt1, Rn0, #0
0x08000262 : Arithmetic Shift Right (immediate) : Rd4, Rm4, #8
0x08000262 : loads a word from memory and writes it to a register : #144, Rt0
0x08000263 : Subtract with carry (register)  : Rm0, Rd2
0x08000263 : Logical Shift Left (immediate) : Rd1, Rm1, #16
0x08000263 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000263 : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x08000264 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000266 : Move immediate value to a register : Rd0, #64
0x08000266 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000266 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x08000266 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x08000267 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x0800026a : Address to Register adds an immediate value to the PC value : #64, Rd0
0x0800026a : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800026b : Load Register Byte (immediate) : Rt4, Rn6, #11
0x0800026b : Load Register Signed Halfword (register) : Rt5, Rn7, Rm2
0x0800026b : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x0800026c : Compare substract register value from register value : Rn1, Rm3
0x0800026c : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800026c : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800026d : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x0800026d : Logical Shift Left (register)  : Rm0, Rd0
0x0800026d : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800026e : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800026e : Store Register (immediate) : Rt0, Rn0, #3
0x0800026e : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800026e : Branch : #1740
0x0800026f : Load Register SP relative (immediate) : #48, Rt0
0x0800026f : Load Register Signed Halfword (register) : Rt7, Rn7, Rm6
0x0800026f : Load Register Byte (immediate) : Rt7, Rn7, #31
0x08000270 : Arithmetic Shift Right (immediate) : Rd3, Rm5, #20
0x08000270 : Load Register Signed Byte (register) : Rt7, Rn5, Rm6
0x08000270 : Store Register SP relative (immediate) : #34, Rt1
0x08000270 : Compare substract register value from register value : Rn1, Rm2
0x08000271 : Load Register (immediate) : Rt2, Rn2, #7
0x08000271 : Address to Register adds an immediate value to the PC value : #72, Rd4
0x08000271 : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x08000271 : Subtract a register value : Rd4, Rn6, Rm0
0x08000272 : Move immediate value to a register : Rd0, #64
0x08000272 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x08000272 : Store Register SP relative (immediate) : #36, Rt2
0x08000272 : loads a word from memory and writes it to a register : #144, Rt0
0x08000273 : Load Register (immediate) : Rt2, Rn2, #7
0x08000273 : Address to Register adds an immediate value to the PC value : #73, Rd4
0x08000273 : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x08000273 : Subtract a register value : Rd4, Rn6, Rm0
0x08000274 : Move immediate value to a register : Rd0, #64
0x08000274 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x08000274 : Store Register (immediate) : Rt4, Rn0, #11
0x08000274 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000275 : Store Register Byte (immediate) : Rt4, Rn5, #27
0x08000275 : Add immediate value to a register value : Rd7, #110
0x08000276 : Store Register (immediate) : Rt6, Rn0, #15
0x08000276 : Load Register Halfword (immediate) : Rt3, Rn3, #20
0x08000276 : Store Register SP relative (immediate) : #44, Rt6
0x08000276 : Load Register (register) : Rt1, Rn6, Rm2
0x08000277 : Load Register (immediate) : Rt2, Rn2, #7
0x08000277 : Address to Register adds an immediate value to the PC value : #75, Rd5
0x08000277 : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x08000277 : Subtract a register value : Rd4, Rn6, Rm0
0x08000278 : Address to Register adds an immediate value to the PC value : #64, Rd0
0x08000278 : Store Register Halfword (immediate) : Rt3, Rn0, #4
0x08000278 : Load Register (immediate) : Rt4, Rn2, #11
0x08000278 : ADD (SP plus immediate) adds an immediate value to the SP value : #80, Rd0
0x08000279 : Arithmetic Shift Right (immediate) : Rd5, Rm5, #24
0x08000279 : Load Register Halfword (register) : Rt5, Rn6, Rm2
0x08000279 : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x08000279 : Compare substract register value from register value : Rn1, Rm3
0x0800027a : Subtract with carry (register)  : Rm0, Rd2
0x0800027a : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800027a : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800027a : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x0800027b : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x0800027b : Subtract with carry (register)  : Rm0, Rd2
0x0800027b : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800027b : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800027c : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800027d : Sub immediate value to a register value : Rd0, #112
0x0800027d : Branch : #192
0x0800027d : Logical Shift Left (immediate) : Rd7, Rm0, #12
0x0800027d : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800027e : Move immediate value to a register : Rd0, #64
0x0800027e : Store Register Halfword (immediate) : Rt1, Rn0, #0
0x0800027e : Arithmetic Shift Right (immediate) : Rd4, Rm4, #8
0x0800027e : loads a word from memory and writes it to a register : #144, Rt0
0x0800027f : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800027f : Logical Shift Left (immediate) : Rd1, Rm1, #16
0x08000283 : Logical Shift Left (register)  : Rm0, Rd0
0x08000283 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000283 : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x08000284 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000285 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000286 : Add a register value : Rd0, Rn6, Rm0
0x08000286 : Store Register (immediate) : Rt0, Rn0, #3
0x08000286 : Address to Register adds an immediate value to the PC value : #67, Rd1
0x08000286 : Store Register Halfword (immediate) : Rt4, Rn1, #24
0x08000287 : Load Register Byte (immediate) : Rt4, Rn6, #11
0x08000287 : Load Register Signed Halfword (register) : Rt5, Rn7, Rm2
0x08000287 : Move immediate value to a register : Rd1, #66
0x08000288 : Store Register Halfword (immediate) : Rt3, Rn1, #20
0x08000288 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x08000288 : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x08000288 : Branch : #192
0x08000289 : Store Register Halfword (immediate) : Rt1, Rn0, #0
0x08000289 : Load Register (immediate) : Rt4, Rn3, #27
0x08000289 : Move copies a value from a register to the destination register : Rd5, Rm1
0x0800028a : Subtract a register value : Rd7, Rn6, Rm4
0x0800028a : Store Register (immediate) : Rt0, Rn1, #19
0x0800028a : Store Register SP relative (immediate) : #35, Rt1
0x0800028a : Move copies a value from a register to the destination register : Rd4, Rm1
0x0800028b : Add a register value : Rd2, Rn6, Rm4
0x0800028b : Move immediate value to a register : Rd4, #72
0x0800028b : Store Register SP relative (immediate) : #35, Rt1
0x0800028b : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x0800028c : Logical Shift Right (immediate) : Rd2, Rm2, #4
0x0800028c : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x0800028d : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x0800028d : Logical Shift Left (register)  : Rm0, Rd0
0x0800028d : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800028e : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800028e : Store Register (immediate) : Rt0, Rn0, #3
0x0800028e : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800028e : Branch : #1740
0x0800028f : Load Register SP relative (immediate) : #48, Rt0
0x0800028f : Load Register Signed Halfword (register) : Rt7, Rn7, Rm6
0x0800028f : Load Register Byte (immediate) : Rt7, Rn7, #31
0x08000290 : Arithmetic Shift Right (immediate) : Rd3, Rm5, #20
0x08000290 : Load Register Signed Byte (register) : Rt7, Rn5, Rm6
0x08000290 : Store Register SP relative (immediate) : #34, Rt1
0x08000290 : Compare substract register value from register value : Rn1, Rm2
0x08000291 : Load Register Halfword (immediate) : Rt2, Rn2, #4
0x08000291 : Move immediate value to a register : Rd4, #72
0x08000291 : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x08000291 : Move immediate value to a register : Rd2, #68
0x08000292 : Move immediate value to a register : Rd0, #65
0x08000292 : Store Register Halfword (immediate) : Rt4, Rn0, #8
0x08000292 : Store Register (immediate) : Rt4, Rn0, #11
0x08000292 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000293 : Store Register Byte (immediate) : Rt4, Rn5, #27
0x08000293 : Move immediate value to a register : Rd7, #78
0x08000293 : Load Register SP relative (immediate) : #59, Rt5
0x08000294 : Store Register (immediate) : Rt4, Rn0, #11
0x08000294 : Load Register Halfword (immediate) : Rt3, Rn2, #4
0x08000294 : Store Register SP relative (immediate) : #44, Rt6
0x08000294 : Load Register (register) : Rt1, Rn6, Rm2
0x08000295 : Load Register Halfword (immediate) : Rt2, Rn2, #4
0x08000295 : Move immediate value to a register : Rd5, #75
0x08000295 : Logical Shift Right (immediate) : Rd1, Rm2, #0
0x08000295 : Move immediate value to a register : Rd2, #68
0x08000296 : Move immediate value to a register : Rd0, #65
0x08000296 : Store Register Halfword (immediate) : Rt4, Rn0, #8
0x08000296 : Store Register Byte (immediate) : Rt4, Rn4, #11
0x08000296 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x08000297 : Store Register Byte (immediate) : Rt6, Rn5, #31
0x08000297 : Store Register (immediate) : Rt6, Rn1, #31
0x08000297 : Load Register SP relative (immediate) : #59, Rt5
0x08000298 : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x08000298 : Add a register value : Rd3, Rn6, Rm4
0x08000298 : Load Register (immediate) : Rt6, Rn3, #31
0x08000299 : Move copies a value from a register to the destination register : Rd5, Rm1
0x08000299 : Subtract a register value : Rd7, Rn6, Rm4
0x08000299 : Store Register Halfword (immediate) : Rt0, Rn1, #16
0x0800029a : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800029a : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800029a : Move immediate value to a register : Rd1, #66
0x0800029a : Load Register SP relative (immediate) : #49, Rt0
0x0800029b : Store Register (immediate) : Rt4, Rn0, #11
0x0800029b : ADD (SP plus immediate) adds an immediate value to the SP value : #83, Rd1
0x0800029b : Address to Register adds an immediate value to the PC value : #76, Rd6
0x0800029b : Logical Shift Right (immediate) : Rd5, Rm2, #8
0x0800029c : Compare immediate value from a register value : Rn2, #84
0x0800029c : Address to Register adds an immediate value to the PC value : #65, Rd0
0x0800029c : Store Register Halfword (immediate) : Rt5, Rn0, #8
0x0800029c : Load Register (immediate) : Rt4, Rn2, #11
0x0800029d : ADD (SP plus immediate) adds an immediate value to the SP value : #80, Rd0
0x0800029d : Arithmetic Shift Right (immediate) : Rd5, Rm5, #24
0x0800029d : Load Register Halfword (register) : Rt5, Rn6, Rm2
0x0800029d : Move immediate value to a register : Rd1, #66
0x0800029e : Store Register Halfword (immediate) : Rt3, Rn1, #20
0x0800029e : Move immediate value to a register : Rd2, #68
0x0800029e : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800029e : Branch : #708
0x0800029f : Load Register Halfword (immediate) : Rt1, Rn2, #0
0x0800029f : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800029f : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800029f : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002a0 : Branch with Link and Exchange : Rm1
0x080002a0 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002a0 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002a1 : Compare immediate value from a register value : Rn7, #95
0x080002a2 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x080002a2 : Logical Shift Left (immediate) : Rd5, Rm0, #8
0x080002b6 : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x080002b6 : Logical Shift Left (register)  : Rm0, Rd0
0x080002b6 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002b6 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002b7 : Branch : #192
0x080002b7 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002b8 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002b8 : Sub immediate value to a register value : Rd0, #112
0x080002b8 : Move immediate value to a register : Rd0, #65
0x080002b8 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002b9 : Branch : #708
0x080002b9 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002ba : Load Register (immediate) : Rt7, Rn3, #31
0x080002ba : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080002ba : Logical Shift Left (immediate) : Rd5, Rm1, #24
0x080002be : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x080002be : Logical Shift Left (register)  : Rm0, Rd0
0x080002be : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002bf : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002bf : Branch : #192
0x080002c0 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002c0 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002c0 : Sub immediate value to a register value : Rd0, #112
0x080002c0 : Move immediate value to a register : Rd0, #65
0x080002c1 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002c1 : Branch : #708
0x080002c1 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002c1 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002c2 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002c2 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002c2 : Branch with Link and Exchange : Rm1
0x080002c2 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002c3 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002c3 : Branch : #192
0x080002c4 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002c4 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002c4 : Sub immediate value to a register value : Rd0, #112
0x080002c4 : Move immediate value to a register : Rd0, #65
0x080002c5 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002c5 : Branch : #708
0x080002c5 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002c5 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002c6 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002c6 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002c6 : Branch with Link and Exchange : Rm1
0x080002c6 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002c7 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002c7 : Branch : #192
0x080002c8 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002c8 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002c8 : Sub immediate value to a register value : Rd0, #112
0x080002c8 : Move immediate value to a register : Rd0, #65
0x080002c9 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002c9 : Branch : #708
0x080002c9 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002c9 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002ca : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002ca : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002ca : Branch with Link and Exchange : Rm1
0x080002ca : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002cb : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002cb : Branch : #192
0x080002cc : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002cc : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002cc : Sub immediate value to a register value : Rd0, #112
0x080002cc : Move immediate value to a register : Rd0, #65
0x080002cd : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002cd : Branch : #708
0x080002cd : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002cd : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002ce : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002ce : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002ce : Branch with Link and Exchange : Rm1
0x080002ce : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002cf : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002cf : Branch : #192
0x080002d0 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002d0 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002d0 : Sub immediate value to a register value : Rd0, #112
0x080002d0 : Move immediate value to a register : Rd0, #65
0x080002d1 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002d1 : Branch : #708
0x080002d1 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002d1 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002d2 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002d2 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002d2 : Branch with Link and Exchange : Rm1
0x080002d2 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002d3 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002d3 : Branch : #192
0x080002d4 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002d4 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002d4 : Sub immediate value to a register value : Rd0, #112
0x080002d4 : Move immediate value to a register : Rd0, #65
0x080002d5 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002d5 : Branch : #708
0x080002d5 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002d5 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002d6 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002d6 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002d6 : Branch with Link and Exchange : Rm1
0x080002d6 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002d7 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002d7 : Branch : #192
0x080002d8 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002d8 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002d8 : Sub immediate value to a register value : Rd0, #112
0x080002d8 : Move immediate value to a register : Rd0, #65
0x080002d9 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002d9 : Branch : #708
0x080002d9 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002da : SUB immediate value to a register value : Rd7, Rn7, Rm4
0x080002da : Load Register Byte (immediate) : Rt7, Rn7, #31
0x080002da : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002da : Branch with Link and Exchange : Rm1
0x080002db : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002db : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002dc : Branch : #192
0x080002dc : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002dc : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002dc : Sub immediate value to a register value : Rd0, #112
0x080002dd : Move immediate value to a register : Rd0, #65
0x080002dd : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002dd : Branch : #708
0x080002dd : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002de : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002de : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002de : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002de : Branch with Link and Exchange : Rm1
0x080002df : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002df : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002e0 : Branch : #192
0x080002e0 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002e0 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002e0 : Sub immediate value to a register value : Rd0, #112
0x080002e1 : Move immediate value to a register : Rd0, #65
0x080002e1 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002e1 : Branch : #708
0x080002e1 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002e2 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002e2 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002e2 : Logical Shift Left (immediate) : Rd3, Rm0, #4
0x080002e2 : Logical Shift Left (immediate) : Rd7, Rm1, #28
0x080002e6 : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x080002e6 : Logical Shift Left (register)  : Rm0, Rd0
0x080002e7 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002e7 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002e8 : Branch : #192
0x080002e8 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002e8 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002e8 : Sub immediate value to a register value : Rd0, #112
0x080002e9 : Move immediate value to a register : Rd0, #65
0x080002e9 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002e9 : Branch : #708
0x080002e9 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002ea : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002ea : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002ea : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002ea : Branch with Link and Exchange : Rm1
0x080002eb : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002eb : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002ec : Branch : #192
0x080002ec : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002ec : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002ec : Sub immediate value to a register value : Rd0, #112
0x080002ed : Move immediate value to a register : Rd0, #65
0x080002ed : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002ed : Branch : #708
0x080002ed : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002ee : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002ee : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002ee : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002ee : Branch with Link and Exchange : Rm1
0x080002ef : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002ef : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002f0 : Branch : #192
0x080002f0 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002f0 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002f0 : Sub immediate value to a register value : Rd0, #112
0x080002f1 : Move immediate value to a register : Rd0, #65
0x080002f1 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002f1 : Branch : #708
0x080002f1 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002f2 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002f2 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002f2 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002f2 : Branch with Link and Exchange : Rm1
0x080002f3 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002f3 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002f4 : Branch : #192
0x080002f4 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002f4 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002f4 : Sub immediate value to a register value : Rd0, #112
0x080002f5 : Move immediate value to a register : Rd0, #65
0x080002f5 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002f5 : Branch : #708
0x080002f5 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002f6 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002f6 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002f6 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002f6 : Branch with Link and Exchange : Rm1
0x080002f7 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002f7 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002f8 : Branch : #192
0x080002f8 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002f8 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002f8 : Sub immediate value to a register value : Rd0, #112
0x080002f9 : Move immediate value to a register : Rd0, #65
0x080002f9 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002f9 : Branch : #708
0x080002f9 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002fa : Sub immediate value to a register value : Rd6, #124
0x080002fa : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x080002fa : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x080002fb : Logical Shift Left (register)  : Rm0, Rd1
0x080002fb : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002fb : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080002fc : Branch : #192
0x080002fc : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080002fc : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080002fd : Sub immediate value to a register value : Rd0, #112
0x080002fd : Move immediate value to a register : Rd0, #65
0x080002fd : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080002fd : Branch : #708
0x080002fe : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x080002fe : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x080002fe : Load Register Byte (immediate) : Rt1, Rn6, #3
0x080002fe : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080002ff : Branch with Link and Exchange : Rm1
0x080002ff : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080002ff : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000300 : Branch : #192
0x08000300 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000300 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000301 : Sub immediate value to a register value : Rd0, #112
0x08000301 : Move immediate value to a register : Rd0, #65
0x08000301 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000301 : Branch : #708
0x08000302 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000302 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000302 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000302 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000303 : Branch with Link and Exchange : Rm1
0x08000303 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000303 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000304 : Branch : #192
0x08000304 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000304 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000305 : Sub immediate value to a register value : Rd0, #112
0x08000305 : Move immediate value to a register : Rd0, #65
0x08000305 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000305 : Branch : #708
0x08000306 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000306 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000306 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000306 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000307 : Branch with Link and Exchange : Rm1
0x08000307 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000307 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000308 : Branch : #192
0x08000308 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000308 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000309 : Sub immediate value to a register value : Rd0, #112
0x08000309 : Move immediate value to a register : Rd0, #65
0x08000309 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000309 : Branch : #708
0x0800030a : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800030a : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800030a : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800030a : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800030b : Branch with Link and Exchange : Rm1
0x0800030b : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800030b : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800030c : Branch : #192
0x0800030c : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800030c : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800030d : Sub immediate value to a register value : Rd0, #112
0x0800030d : Move immediate value to a register : Rd0, #65
0x0800030d : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800030d : Branch : #708
0x0800030e : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800030e : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800030e : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800030e : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800030f : Branch with Link and Exchange : Rm1
0x0800030f : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800030f : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000310 : Branch : #192
0x08000310 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000310 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000311 : Sub immediate value to a register value : Rd0, #112
0x08000311 : Move immediate value to a register : Rd0, #65
0x08000311 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000311 : Branch : #708
0x08000312 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000312 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000312 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000312 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000313 : Branch with Link and Exchange : Rm1
0x08000313 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000313 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000314 : Branch : #192
0x08000314 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000314 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000315 : Sub immediate value to a register value : Rd0, #112
0x08000315 : Move immediate value to a register : Rd0, #65
0x08000315 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000315 : Branch : #708
0x08000316 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000316 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000316 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000316 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000317 : Branch with Link and Exchange : Rm1
0x08000317 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000317 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000318 : Branch : #192
0x08000318 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000318 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000319 : Sub immediate value to a register value : Rd0, #112
0x08000319 : Move immediate value to a register : Rd0, #65
0x08000319 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000319 : Branch : #708
0x0800031a : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800031a : Load Register Byte (immediate) : Rt4, Rn7, #27
0x0800031a : SUB immediate value to a register value : Rd7, Rn7, Rm4
0x0800031b : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x0800031b : Subtract with carry (register)  : Rm0, Rd3
0x0800031b : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800031b : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800031c : Branch : #192
0x0800031c : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800031d : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800031d : Sub immediate value to a register value : Rd0, #112
0x0800031d : Move immediate value to a register : Rd0, #65
0x0800031d : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800031e : Branch : #708
0x0800031e : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800031e : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800031e : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800031f : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800031f : Branch with Link and Exchange : Rm1
0x0800031f : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800031f : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000320 : Branch : #192
0x08000320 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000321 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000321 : Sub immediate value to a register value : Rd0, #112
0x08000321 : Move immediate value to a register : Rd0, #65
0x08000321 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000322 : Branch : #708
0x08000322 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000322 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000322 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000323 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000323 : Branch with Link and Exchange : Rm1
0x08000323 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000323 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000324 : Branch : #192
0x08000324 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000325 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000325 : Sub immediate value to a register value : Rd0, #112
0x08000325 : Move immediate value to a register : Rd0, #65
0x08000325 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000326 : Branch : #708
0x08000326 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000326 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000326 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000327 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000327 : Branch with Link and Exchange : Rm1
0x08000327 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000327 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000328 : Branch : #192
0x08000328 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000329 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000329 : Sub immediate value to a register value : Rd0, #112
0x08000329 : Move immediate value to a register : Rd0, #65
0x08000329 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800032a : Branch : #708
0x0800032a : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800032a : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800032a : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800032b : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800032b : Branch with Link and Exchange : Rm1
0x0800032b : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800032b : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800032c : Branch : #192
0x0800032c : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800032d : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800032d : Sub immediate value to a register value : Rd0, #112
0x0800032d : Move immediate value to a register : Rd0, #65
0x0800032d : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800032e : Branch : #708
0x0800032e : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800032e : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800032e : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800032f : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800032f : Branch with Link and Exchange : Rm1
0x0800032f : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800032f : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000330 : Branch : #192
0x08000330 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000331 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000331 : Sub immediate value to a register value : Rd0, #112
0x08000331 : Move immediate value to a register : Rd0, #65
0x08000331 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000332 : Branch : #708
0x08000332 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000332 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000332 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000333 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000333 : Branch with Link and Exchange : Rm1
0x08000333 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000333 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000334 : Branch : #192
0x08000334 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000335 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000335 : Sub immediate value to a register value : Rd0, #112
0x08000335 : Move immediate value to a register : Rd0, #65
0x08000335 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000336 : Branch : #708
0x08000336 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000336 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000336 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000337 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000337 : Branch with Link and Exchange : Rm1
0x08000337 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000337 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000338 : Branch : #192
0x08000338 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000339 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000339 : Sub immediate value to a register value : Rd0, #112
0x08000339 : Move immediate value to a register : Rd0, #65
0x08000339 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800033a : Branch : #708
0x0800033a : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800033b : Compare immediate value from a register value : Rn7, #95
0x0800033b : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x0800033b : Compare substracts a register value from a register value : Rm0, Rn5
0x0800033b : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800033c : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800033c : Branch : #192
0x0800033d : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800033d : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800033d : Sub immediate value to a register value : Rd0, #112
0x0800033d : Move immediate value to a register : Rd0, #65
0x0800033e : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800033e : Branch : #708
0x0800033e : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800033e : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800033f : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800033f : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800033f : Branch with Link and Exchange : Rm1
0x0800033f : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000340 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000340 : Branch : #192
0x08000341 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000341 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000341 : Sub immediate value to a register value : Rd0, #112
0x08000341 : Move immediate value to a register : Rd0, #65
0x08000342 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000342 : Branch : #708
0x08000342 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000342 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000343 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000343 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000343 : Branch with Link and Exchange : Rm1
0x08000343 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000344 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000344 : Branch : #192
0x08000345 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000345 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000345 : Sub immediate value to a register value : Rd0, #112
0x08000345 : Move immediate value to a register : Rd0, #65
0x08000346 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000346 : Branch : #708
0x08000346 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000346 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000347 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000347 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000347 : Branch with Link and Exchange : Rm1
0x08000347 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000348 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000348 : Branch : #192
0x08000349 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000349 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000349 : Sub immediate value to a register value : Rd0, #112
0x08000349 : Move immediate value to a register : Rd0, #65
0x0800034a : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800034a : Branch : #708
0x0800034a : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800034a : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800034b : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800034b : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800034b : Branch with Link and Exchange : Rm1
0x0800034b : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800034c : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800034c : Branch : #192
0x0800034d : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800034d : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800034d : Sub immediate value to a register value : Rd0, #112
0x0800034d : Move immediate value to a register : Rd0, #65
0x0800034e : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800034e : Branch : #708
0x0800034e : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800034e : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800034f : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800034f : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800034f : Branch with Link and Exchange : Rm1
0x0800034f : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000350 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000350 : Branch : #192
0x08000351 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000351 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000351 : Sub immediate value to a register value : Rd0, #112
0x08000351 : Move immediate value to a register : Rd0, #65
0x08000352 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000352 : Branch : #708
0x08000352 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000352 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000353 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000353 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000353 : Branch with Link and Exchange : Rm1
0x08000353 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000354 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000354 : Branch : #192
0x08000355 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000355 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000355 : Sub immediate value to a register value : Rd0, #112
0x08000355 : Move immediate value to a register : Rd0, #65
0x08000356 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000356 : Branch : #708
0x08000356 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000356 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000357 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000357 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000357 : Branch with Link and Exchange : Rm1
0x08000357 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000358 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000358 : Branch : #192
0x08000359 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000359 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000359 : Sub immediate value to a register value : Rd0, #112
0x08000359 : Move immediate value to a register : Rd0, #65
0x0800035a : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800035a : Branch : #708
0x0800035a : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800035b : Logical Shift Right (immediate) : Rd7, Rm3, #28
0x0800035b : Sub immediate value to a register value : Rd7, #127
0x0800035b : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x0800035b : Bit clear performs a bitwise AND of a register value and the complement of a register value : Rm0, Rd7
0x0800035c : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800035c : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800035d : Branch : #192
0x0800035d : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800035d : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800035d : Sub immediate value to a register value : Rd0, #112
0x0800035e : Move immediate value to a register : Rd0, #65
0x0800035e : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800035e : Branch : #708
0x0800035e : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800035f : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800035f : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800035f : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800035f : Branch with Link and Exchange : Rm1
0x08000360 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000360 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000361 : Branch : #192
0x08000361 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000361 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000361 : Sub immediate value to a register value : Rd0, #112
0x08000362 : Move immediate value to a register : Rd0, #65
0x08000362 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000362 : Branch : #708
0x08000362 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000363 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000363 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000363 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000363 : Branch with Link and Exchange : Rm1
0x08000364 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000364 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000365 : Branch : #192
0x08000365 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000365 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000365 : Sub immediate value to a register value : Rd0, #112
0x08000366 : Move immediate value to a register : Rd0, #65
0x08000366 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000366 : Branch : #708
0x08000366 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000367 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000367 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000367 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000367 : Branch with Link and Exchange : Rm1
0x08000368 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000368 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000369 : Branch : #192
0x08000369 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000369 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000369 : Sub immediate value to a register value : Rd0, #112
0x0800036a : Move immediate value to a register : Rd0, #65
0x0800036a : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800036a : Branch : #708
0x0800036a : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800036b : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800036b : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800036b : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800036b : Branch with Link and Exchange : Rm1
0x0800036c : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800036c : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800036d : Branch : #192
0x0800036d : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800036d : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800036d : Sub immediate value to a register value : Rd0, #112
0x0800036e : Move immediate value to a register : Rd0, #65
0x0800036e : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800036e : Branch : #708
0x0800036e : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800036f : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800036f : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800036f : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800036f : Branch with Link and Exchange : Rm1
0x08000370 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000370 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000371 : Branch : #192
0x08000371 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000371 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000371 : Sub immediate value to a register value : Rd0, #112
0x08000372 : Move immediate value to a register : Rd0, #65
0x08000372 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000372 : Branch : #708
0x08000372 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000373 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000373 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000373 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000373 : Branch with Link and Exchange : Rm1
0x08000374 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000374 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000375 : Branch : #192
0x08000375 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000375 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000375 : Sub immediate value to a register value : Rd0, #112
0x08000376 : Move immediate value to a register : Rd0, #65
0x08000376 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000376 : Branch : #708
0x08000376 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000377 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000377 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000377 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000377 : Branch with Link and Exchange : Rm1
0x08000378 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000378 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000379 : Branch : #192
0x08000379 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000379 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000379 : Sub immediate value to a register value : Rd0, #112
0x0800037a : Move immediate value to a register : Rd0, #65
0x0800037a : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800037a : Branch : #708
0x0800037a : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800037b : Sub immediate value to a register value : Rd6, #124
0x0800037b : loads a word from memory and writes it to a register : #159, Rt7
0x0800037b : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x0800037c :  : Rm1, Rd1
0x0800037c : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800037c : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800037d : Branch : #192
0x0800037d : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800037d : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800037e : Sub immediate value to a register value : Rd0, #112
0x0800037e : Move immediate value to a register : Rd0, #65
0x0800037e : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800037e : Branch : #708
0x0800037f : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800037f : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800037f : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800037f : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000380 : Branch with Link and Exchange : Rm1
0x08000380 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000380 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000381 : Branch : #192
0x08000381 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000381 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000382 : Sub immediate value to a register value : Rd0, #112
0x08000382 : Move immediate value to a register : Rd0, #65
0x08000382 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000382 : Branch : #708
0x08000383 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000383 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000383 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000383 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000384 : Branch with Link and Exchange : Rm1
0x08000384 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000384 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000385 : Branch : #192
0x08000385 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000385 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000386 : Sub immediate value to a register value : Rd0, #112
0x08000386 : Move immediate value to a register : Rd0, #65
0x08000386 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000386 : Branch : #708
0x08000387 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000387 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000387 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000387 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000388 : Branch with Link and Exchange : Rm1
0x08000388 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000388 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000389 : Branch : #192
0x08000389 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000389 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800038a : Sub immediate value to a register value : Rd0, #112
0x0800038a : Move immediate value to a register : Rd0, #65
0x0800038a : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800038a : Branch : #708
0x0800038b : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800038b : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800038b : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800038b : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800038c : Branch with Link and Exchange : Rm1
0x0800038c : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800038c : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800038d : Branch : #192
0x0800038d : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800038d : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800038e : Sub immediate value to a register value : Rd0, #112
0x0800038e : Move immediate value to a register : Rd0, #65
0x0800038e : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800038e : Branch : #708
0x0800038f : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800038f : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800038f : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800038f : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000390 : Branch with Link and Exchange : Rm1
0x08000390 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000390 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000391 : Branch : #192
0x08000391 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000391 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000392 : Sub immediate value to a register value : Rd0, #112
0x08000392 : Move immediate value to a register : Rd0, #65
0x08000392 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000392 : Branch : #708
0x08000393 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000393 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000393 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000393 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000394 : Branch with Link and Exchange : Rm1
0x08000394 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000394 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000395 : Branch : #192
0x08000395 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000395 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x08000396 : Sub immediate value to a register value : Rd0, #112
0x08000396 : Move immediate value to a register : Rd0, #65
0x08000396 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x08000396 : Branch : #708
0x08000397 : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x08000397 : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x08000397 : Load Register Byte (immediate) : Rt1, Rn6, #3
0x08000397 : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x08000398 : Branch with Link and Exchange : Rm1
0x08000398 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x08000398 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x08000399 : Branch : #192
0x08000399 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x08000399 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800039a : Sub immediate value to a register value : Rd0, #112
0x0800039a : Move immediate value to a register : Rd0, #65
0x0800039a : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800039a : Branch : #708
0x0800039b : Load Register Halfword (immediate) : Rt0, Rn2, #0
0x0800039b : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800039b : Load Register Byte (immediate) : Rt1, Rn6, #3
0x0800039b : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x0800039c : Branch with Link and Exchange : Rm1
0x0800039c : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x0800039c :  : Rm1, Rd0
0x0800039c : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x0800039d : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x0800039d : Branch : #192
0x0800039e : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x0800039e : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x0800039e : Sub immediate value to a register value : Rd0, #112
0x0800039e : Branch : #193
0x0800039f : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x0800039f : SUB immediate value to a register value : Rd4, Rn7, Rm0
0x0800039f : Load Register Byte (immediate) : Rt0, Rn6, #3
0x0800039f : Arithmetic Shift Right (immediate) : Rd3, Rm4, #4
0x080003a0 : Branch with Link and Exchange : Rm1
0x080003a0 : Arithmetic Shift Right (immediate) : Rd2, Rm4, #4
0x080003a0 :  : Rm1, Rd0
0x080003a0 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080003a1 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080003a1 : Branch : #192
0x080003a2 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080003a2 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080003a2 : Sub immediate value to a register value : Rd0, #112
0x080003a2 : Store Register (immediate) : Rt1, Rn0, #3
0x080003a3 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080003a3 : Logical Shift Left (immediate) : Rd4, Rm1, #24
0x080003a3 : Add a register value : Rd0, Rn6, Rm0
0x080003a3 : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x080003a4 : Subtract with carry (register)  : Rm0, Rd3
0x080003a4 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080003a4 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080003a8 : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x080003a8 : Logical Shift Left (register)  : Rm0, Rd0
0x080003a8 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080003a9 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080003a9 : Branch : #192
0x080003aa : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080003aa : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080003aa : Sub immediate value to a register value : Rd0, #112
0x080003aa : Branch : #193
0x080003ab : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080003ab : Logical Shift Right (immediate) : Rd5, Rm3, #24
0x080003ab : Sub immediate value to a register value : Rd3, #119
0x080003ac : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x080003ac : Bit clear performs a bitwise AND of a register value and the complement of a register value : Rm0, Rd7
0x080003ac : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080003ac : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080003ad : Branch : #192
0x080003ad : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080003ae : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080003ae : Sub immediate value to a register value : Rd0, #112
0x080003ae : Store Register (immediate) : Rt1, Rn0, #3
0x080003ae : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080003af : Load Register (register) : Rt0, Rn6, Rm2
0x080003af : Logical Shift Right (immediate) : Rd2, Rm3, #20
0x080003af : Add immediate value to a register value : Rd5, #107
0x080003b0 : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x080003b0 : Logical Shift Left (immediate) : Rd6, Rm0, #12
0x080003bb : Store Register (immediate) : Rt0, Rn0, #3
0x080003bb : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080003bc : Arithmetic Shift Right (immediate) : Rd4, Rm5, #24
0x080003bc : Load Register (register) : Rt0, Rn6, Rm2
0x080003bc : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080003bc : Logical Shift Left (immediate) : Rd3, Rm1, #20
0x080003c0 : Arithmetic Shift Right (immediate) : Rd0, Rm4, #0
0x080003c0 : Logical Shift Left (register)  : Rm0, Rd0
0x080003c1 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080003c1 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080003c2 : Branch : #192
0x080003c2 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080003c2 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080003c2 : Sub immediate value to a register value : Rd0, #112
0x080003c3 : Address to Register adds an immediate value to the PC value : #65, Rd0
0x080003c3 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080003c3 : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn2
0x080003c3 : Compare immediate value from a register value : Rn0, #80
0x080003c4 : Logical Shift Right (immediate) : Rd1, Rm3, #16
0x080003c4 : Add immediate value to a register value : Rd2, #101
0x080003c4 : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x080003c4 : Bit clear performs a bitwise AND of a register value and the complement of a register value : Rm0, Rd6
0x080003c5 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080003c5 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080003c6 : Branch : #192
0x080003c6 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080003c6 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080003c6 : Sub immediate value to a register value : Rd0, #112
0x080003c7 : Branch : #193
0x080003c7 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080003c8 : Compare immediate value from a register value : Rn7, #95
0x080003c8 : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x080003c8 : Compare substracts a register value from a register value : Rm0, Rn5
0x080003c8 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080003c9 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080003c9 : Branch : #192
0x080003ca : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080003ca : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080003ca : Sub immediate value to a register value : Rd0, #112
0x080003ca : Move immediate value to a register : Rd0, #65
0x080003cb : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080003cb : Load Multiple loads multiple registers from consecutive memory locations using an address from a base register : Rn0
0x080003cb : Logical Shift Right (immediate) : Rd6, Rm2, #12
0x080003cc : Compare immediate value from a register value : Rn4, #89
0x080003cc : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x080003cc : Compare substracts a register value from a register value : Rm0, Rn5
0x080003cc : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080003cd : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080003cd : Branch : #192
0x080003ce : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080003ce : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080003ce : Sub immediate value to a register value : Rd0, #112
0x080003ce : Store Register (immediate) : Rt1, Rn0, #3
0x080003cf : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080003cf : Address to Register adds an immediate value to the PC value : #76, Rd6
0x080003cf : Load Register SP relative (immediate) : #48, Rt0
0x080003cf : Logical Shift Right (immediate) : Rd4, Rm2, #8
0x080003d0 : Compare immediate value from a register value : Rn1, #83
0x080003d0 : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x080003d0 : Compare substracts a register value from a register value : Rm0, Rn5
0x080003d0 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080003d1 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080003d1 : Branch : #192
0x080003d2 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080003d2 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080003d2 : Sub immediate value to a register value : Rd0, #112
0x080003d2 : Address to Register adds an immediate value to the PC value : #65, Rd0
0x080003d3 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080003d3 : Load Register SP relative (immediate) : #52, Rt2
0x080003d3 : Load Register (immediate) : Rt0, Rn2, #3
0x080003d3 : Logical Shift Right (immediate) : Rd3, Rm2, #4
0x080003d4 : Move immediate value to a register : Rd6, #77
0x080003d4 : Arithmetic Shift Right (immediate) : Rd1, Rm4, #0
0x080003d4 : Compare substracts a register value from a register value : Rm0, Rn4
0x080003d4 : Logical Shift Left (immediate) : Rd2, Rm0, #4
0x080003d5 : Logical Shift Left (immediate) : Rd0, Rm1, #16
0x080003d5 : Branch : #192
0x080003d6 : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080003d6 : Logical Shift Right (immediate) : Rd4, Rm3, #24
0x080003d6 : Sub immediate value to a register value : Rd0, #112
0x080003d6 : Move immediate value to a register : Rd0, #65
0x080003d7 : Store Register Halfword (immediate) : Rt7, Rn0, #12
0x080003d7 : Store Register Halfword : Rt4, Rn4, Rm2
0x080003d7 : loads a word from memory and writes it to a register : #144, Rt0
0x080003d7 : Arithmetic Shift Right (immediate) : Rd2, Rm5, #20
0x080003d8 : Store Register Byte : Rt1, Rn5, Rm2
0x080003d8 : Subtract with carry (register)  : Rm0, Rd2
0x080003d8 : Logical Shift Left (immediate) : Rd2, Rm1, #20
0x080003d8 : Move immediate value to a register : Rd4, #72
0x080003d9 : Store Register SP relative (immediate) : #32, Rt0
0x080003d9 : Logical Shift Left (immediate) : Rd4, Rm0, #8
0x080003d9 : Logical Shift Right (immediate) : Rd2, Rm2, #4
0x080003da : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x080003da : Store Register Halfword (immediate) : Rt0, Rn0, #0
0x080003da : Logical Shift Right (immediate) : Rd0, Rm2, #0
0x080003db : Move immediate value to a register : Rd0, #64
0x080003db : Logical Shift Left (immediate) : Rd1, Rm0, #0
0x080003db : Logical Shift Left (immediate) : Rd4, Rm0, #8
